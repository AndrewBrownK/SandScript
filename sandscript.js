#!/usr/bin/env node
// Generated by psc-bundle 0.7.0.0
var PS = { };
(function(exports) {
  /* global exports */
  "use strict";

  // module Prelude

  //- Functor --------------------------------------------------------------------

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  //- Bind -----------------------------------------------------------------------

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  };

  //- Semiring -------------------------------------------------------------------

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  //- ModuloSemiring -------------------------------------------------------------

  exports.intDiv = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x / y | 0;
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      return x % y;
    };
  };

  //- Ring -----------------------------------------------------------------------

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };

  //- Ord ------------------------------------------------------------------------

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x > y ? gt : eq;
          };
        };
      };
    };
  };

  //- Lattice --------------------------------------------------------------------

  exports.boolOr = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolAnd = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  //- ComplementedLattice --------------------------------------------------------

  exports.boolNot = function (b) {
    return !b;
  };

  //- Show -----------------------------------------------------------------------

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    return JSON.stringify(s);
  };
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Prelude"];
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var Ring = function (__superclass_Prelude$dotSemiring_0, sub) {
      this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
      this.sub = sub;
  };
  var ModuloSemiring = function (__superclass_Prelude$dotSemiring_0, div, mod) {
      this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
      this.div = div;
      this.mod = mod;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Ord = function (__superclass_Prelude$dotEq_0, compare) {
      this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
      this.compare = compare;
  };
  var Bounded = function (bottom, top) {
      this.bottom = bottom;
      this.top = top;
  };
  var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
      this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
      this.conj = conj;
      this.disj = disj;
      this.not = not;
  };
  var Show = function (show) {
      this.show = show;
  };
  var $dollar = function (f) {
      return function (x) {
          return f(x);
      };
  };
  var zero = function (dict) {
      return dict.zero;
  };
  var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
  var unit = {};
  var top = function (dict) {
      return dict.top;
  };
  var sub = function (dict) {
      return dict.sub;
  };
  var $minus = function (__dict_Ring_0) {
      return sub(__dict_Ring_0);
  }; 
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);  
  var showBoolean = new Show(function (_143) {
      if (_143) {
          return "true";
      };
      if (!_143) {
          return "false";
      };
      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-prelude/src/Prelude.purs line 828, column 1 - line 832, column 1: " + [ _143.constructor.name ]);
  });
  var show = function (dict) {
      return dict.show;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var semigroupArray = new Semigroup($foreign.concatArray);
  var ringInt = new Ring(function () {
      return semiringInt;
  }, $foreign.intSub);
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (__dict_Applicative_2) {
      return pure(__dict_Applicative_2);
  };
  var otherwise = true;
  var one = function (dict) {
      return dict.one;
  };
  var not = function (dict) {
      return dict.not;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var $times = function (__dict_Semiring_4) {
      return mul(__dict_Semiring_4);
  }; 
  var moduloSemiringInt = new ModuloSemiring(function () {
      return semiringInt;
  }, $foreign.intDiv, $foreign.intMod);
  var mod = function (dict) {
      return dict.mod;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (__dict_Functor_5) {
      return map(__dict_Functor_5);
  };
  var id = function (dict) {
      return dict.id;
  };
  var functorArray = new Functor($foreign.arrayMap);
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  }; 
  var eqString = new Eq($foreign.refEq);
  var ordString = new Ord(function () {
      return eqString;
  }, unsafeCompare);
  var eqInt = new Eq($foreign.refEq);
  var ordInt = new Ord(function () {
      return eqInt;
  }, unsafeCompare);
  var eqChar = new Eq($foreign.refEq);
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (__dict_Eq_7) {
      return eq(__dict_Eq_7);
  };
  var eqArray = function (__dict_Eq_8) {
      return new Eq($foreign.eqArrayImpl($eq$eq(__dict_Eq_8)));
  }; 
  var div = function (dict) {
      return dict.div;
  };
  var $div = function (__dict_ModuloSemiring_10) {
      return div(__dict_ModuloSemiring_10);
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var $bar$bar = function (__dict_BooleanAlgebra_11) {
      return disj(__dict_BooleanAlgebra_11);
  };
  var $$const = function (a) {
      return function (_111) {
          return a;
      };
  };
  var conj = function (dict) {
      return dict.conj;
  };
  var $amp$amp = function (__dict_BooleanAlgebra_13) {
      return conj(__dict_BooleanAlgebra_13);
  };
  var compose = function (dict) {
      return dict.compose;
  };                                                   
  var $less$less$less = function (__dict_Semigroupoid_14) {
      return compose(__dict_Semigroupoid_14);
  };
  var compare = function (dict) {
      return dict.compare;
  };
  var $less = function (__dict_Ord_17) {
      return function (a1) {
          return function (a2) {
              var _718 = compare(__dict_Ord_17)(a1)(a2);
              if (_718 instanceof LT) {
                  return true;
              };
              return false;
          };
      };
  };
  var $less$eq = function (__dict_Ord_18) {
      return function (a1) {
          return function (a2) {
              var _719 = compare(__dict_Ord_18)(a1)(a2);
              if (_719 instanceof GT) {
                  return false;
              };
              return true;
          };
      };
  };
  var $greater = function (__dict_Ord_19) {
      return function (a1) {
          return function (a2) {
              var _720 = compare(__dict_Ord_19)(a1)(a2);
              if (_720 instanceof GT) {
                  return true;
              };
              return false;
          };
      };
  };
  var $greater$eq = function (__dict_Ord_20) {
      return function (a1) {
          return function (a2) {
              var _721 = compare(__dict_Ord_20)(a1)(a2);
              if (_721 instanceof LT) {
                  return false;
              };
              return true;
          };
      };
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var boundedBoolean = new Bounded(false, true);
  var bottom = function (dict) {
      return dict.bottom;
  };
  var booleanAlgebraBoolean = new BooleanAlgebra(function () {
      return boundedBoolean;
  }, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
  var $div$eq = function (__dict_Eq_9) {
      return function (x) {
          return function (y) {
              return not(booleanAlgebraBoolean)($eq$eq(__dict_Eq_9)(x)(y));
          };
      };
  };
  var bind = function (dict) {
      return dict.bind;
  };
  var $greater$greater$eq = function (__dict_Bind_24) {
      return bind(__dict_Bind_24);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (__dict_Apply_25) {
      return apply(__dict_Apply_25);
  };
  var liftA1 = function (__dict_Applicative_26) {
      return function (f) {
          return function (a) {
              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $plus$plus = function (__dict_Semigroup_27) {
      return append(__dict_Semigroup_27);
  };
  var $less$greater = function (__dict_Semigroup_28) {
      return append(__dict_Semigroup_28);
  };
  var ap = function (__dict_Monad_30) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_19) {
                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_18) {
                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_19(_18));
                  });
              });
          };
      };
  };
  var monadArray = new Monad(function () {
      return applicativeArray;
  }, function () {
      return bindArray;
  });
  var bindArray = new Bind(function () {
      return applyArray;
  }, $foreign.arrayBind);
  var applyArray = new Apply(function () {
      return functorArray;
  }, ap(monadArray));
  var applicativeArray = new Applicative(function () {
      return applyArray;
  }, function (x) {
      return [ x ];
  });
  var add = function (dict) {
      return dict.add;
  };
  var $plus = function (__dict_Semiring_31) {
      return add(__dict_Semiring_31);
  };
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["Show"] = Show;
  exports["BooleanAlgebra"] = BooleanAlgebra;
  exports["Bounded"] = Bounded;
  exports["Ord"] = Ord;
  exports["Eq"] = Eq;
  exports["Ring"] = Ring;
  exports["ModuloSemiring"] = ModuloSemiring;
  exports["Semiring"] = Semiring;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["||"] = $bar$bar;
  exports["&&"] = $amp$amp;
  exports["not"] = not;
  exports["disj"] = disj;
  exports["conj"] = conj;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports[">="] = $greater$eq;
  exports["<="] = $less$eq;
  exports[">"] = $greater;
  exports["<"] = $less;
  exports["compare"] = compare;
  exports["/="] = $div$eq;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["-"] = $minus;
  exports["sub"] = sub;
  exports["/"] = $div;
  exports["mod"] = mod;
  exports["div"] = div;
  exports["*"] = $times;
  exports["+"] = $plus;
  exports["one"] = one;
  exports["mul"] = mul;
  exports["zero"] = zero;
  exports["add"] = add;
  exports["++"] = $plus$plus;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["<*>"] = $less$times$greater;
  exports["apply"] = apply;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports["<<<"] = $less$less$less;
  exports["compose"] = compose;
  exports["otherwise"] = otherwise;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["$"] = $dollar;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["functorArray"] = functorArray;
  exports["applyArray"] = applyArray;
  exports["applicativeArray"] = applicativeArray;
  exports["bindArray"] = bindArray;
  exports["monadArray"] = monadArray;
  exports["semigroupArray"] = semigroupArray;
  exports["semiringInt"] = semiringInt;
  exports["ringInt"] = ringInt;
  exports["moduloSemiringInt"] = moduloSemiringInt;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqArray"] = eqArray;
  exports["ordInt"] = ordInt;
  exports["ordString"] = ordString;
  exports["boundedBoolean"] = boundedBoolean;
  exports["booleanAlgebraBoolean"] = booleanAlgebraBoolean;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showString"] = showString;;
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];     
  var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.alt = alt;
  };                                         
  var alt = function (dict) {
      return dict.alt;
  };
  var $less$bar$greater = function (__dict_Alt_0) {
      return alt(__dict_Alt_0);
  };
  exports["Alt"] = Alt;
  exports["<|>"] = $less$bar$greater;
  exports["alt"] = alt;;
 
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];     
  var Lazy = function (defer) {
      this.defer = defer;
  };
  var defer = function (dict) {
      return dict.defer;
  };
  var fix = function (__dict_Lazy_0) {
      return function (f) {
          return defer(__dict_Lazy_0)(function (_154) {
              return f(fix(__dict_Lazy_0)(f));
          });
      };
  };
  exports["Lazy"] = Lazy;
  exports["fix"] = fix;
  exports["defer"] = defer;;
 
})(PS["Control.Lazy"] = PS["Control.Lazy"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];     
  var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
      this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;;
 
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Plus = PS["Control.Plus"];     
  var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
      this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
  };
  exports["Alternative"] = Alternative;;
 
})(PS["Control.Alternative"] = PS["Control.Alternative"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var lift2 = function (__dict_Apply_5) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return Prelude["<*>"](__dict_Apply_5)(Prelude["<$>"](__dict_Apply_5["__superclass_Prelude.Functor_0"]())(f)(a))(b);
              };
          };
      };
  };
  exports["lift2"] = lift2;;
 
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];     
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var MonadEff = function (__superclass_Prelude$dotMonad_0, liftEff) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.liftEff = liftEff;
  };
  var monadEffEff = new MonadEff(function () {
      return Control_Monad_Eff.monadEff;
  }, Prelude.id(Prelude.categoryFn));
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["MonadEff"] = MonadEff;
  exports["liftEff"] = liftEff;
  exports["monadEffEff"] = monadEffEff;;
 
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
  /* global exports, console */
  "use strict";

  // module Control.Monad.Eff.Console

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };

  exports.error = function (s) {
    return function () {
      console.error(s);
      return {};
    };
  };
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["error"] = $foreign.error;
  exports["log"] = $foreign.log;;
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["throwException"] = $foreign.throwException;
  exports["error"] = $foreign.error;;
 
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Ref

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.writeRef = function (ref) {
    return function (val) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
 
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["writeRef"] = $foreign.writeRef;
  exports["readRef"] = $foreign.readRef;
  exports["newRef"] = $foreign.newRef;;
 
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Unsafe

  exports.unsafeInterleaveEff = function (f) {
    return f;
  };
 
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["unsafeInterleaveEff"] = $foreign.unsafeInterleaveEff;;
 
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];     
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["MonadTrans"] = MonadTrans;
  exports["lift"] = lift;;
 
})(PS["Control.Monad.Trans"] = PS["Control.Monad.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];     
  var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
      this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
      this.mempty = mempty;
  };       
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;;
 
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (__dict_BooleanAlgebra_1) {
      return new Prelude.Semigroup(function (_208) {
          return function (_209) {
              return Prelude.disj(__dict_BooleanAlgebra_1)(_208)(_209);
          };
      });
  };
  var runDisj = function (_198) {
      return _198;
  };
  var monoidDisj = function (__dict_BooleanAlgebra_3) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(__dict_BooleanAlgebra_3);
      }, Prelude.bottom(__dict_BooleanAlgebra_3["__superclass_Prelude.Bounded_0"]()));
  };
  exports["Disj"] = Disj;
  exports["runDisj"] = runDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;;
 
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Conj = function (x) {
      return x;
  };
  var semigroupConj = function (__dict_BooleanAlgebra_1) {
      return new Prelude.Semigroup(function (_196) {
          return function (_197) {
              return Prelude.conj(__dict_BooleanAlgebra_1)(_196)(_197);
          };
      });
  };
  var runConj = function (_186) {
      return _186;
  };
  var monoidConj = function (__dict_BooleanAlgebra_3) {
      return new Data_Monoid.Monoid(function () {
          return semigroupConj(__dict_BooleanAlgebra_3);
      }, Prelude.top(__dict_BooleanAlgebra_3["__superclass_Prelude.Bounded_0"]()));
  };
  exports["Conj"] = Conj;
  exports["runConj"] = runConj;
  exports["semigroupConj"] = semigroupConj;
  exports["monoidConj"] = monoidConj;;
 
})(PS["Data.Monoid.Conj"] = PS["Data.Monoid.Conj"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (b) {
      return function (f) {
          return function (_125) {
              if (_125 instanceof Nothing) {
                  return b;
              };
              if (_125 instanceof Just) {
                  return f(_125.value0);
              };
              throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-maybe/src/Data/Maybe.purs line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _125.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Prelude["const"](false));
  var isJust = maybe(false)(Prelude["const"](true));
  var functorMaybe = new Prelude.Functor(function (fn) {
      return function (_126) {
          if (_126 instanceof Just) {
              return new Just(fn(_126.value0));
          };
          return Nothing.value;
      };
  });
  var eqMaybe = function (__dict_Eq_8) {
      return new Prelude.Eq(function (_133) {
          return function (_134) {
              if (_133 instanceof Nothing && _134 instanceof Nothing) {
                  return true;
              };
              if (_133 instanceof Just && _134 instanceof Just) {
                  return Prelude["=="](__dict_Eq_8)(_133.value0)(_134.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Prelude.Apply(function () {
      return functorMaybe;
  }, function (_127) {
      return function (x) {
          if (_127 instanceof Just) {
              return Prelude["<$>"](functorMaybe)(_127.value0)(x);
          };
          if (_127 instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-maybe/src/Data/Maybe.purs line 96, column 1 - line 120, column 1: " + [ _127.constructor.name, x.constructor.name ]);
      };
  });
  var applicativeMaybe = new Prelude.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["isNothing"] = isNothing;
  exports["isJust"] = isJust;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["eqMaybe"] = eqMaybe;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Control_Comonad = PS["Control.Comonad"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var semigroupFirst = new Prelude.Semigroup(function (_149) {
      return function (second) {
          if (_149 instanceof Data_Maybe.Just) {
              return _149;
          };
          return second;
      };
  });
  var runFirst = function (_138) {
      return _138;
  };
  var monoidFirst = new Data_Monoid.Monoid(function () {
      return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["runFirst"] = runFirst;
  exports["semigroupFirst"] = semigroupFirst;
  exports["monoidFirst"] = monoidFirst;;
 
})(PS["Data.Maybe.First"] = PS["Data.Maybe.First"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldableMaybe = new Foldable(function (__dict_Monoid_15) {
      return function (f) {
          return function (_164) {
              if (_164 instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(__dict_Monoid_15);
              };
              if (_164 instanceof Data_Maybe.Just) {
                  return f(_164.value0);
              };
              throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs line 51, column 1 - line 59, column 1: " + [ f.constructor.name, _164.constructor.name ]);
          };
      };
  }, function (f) {
      return function (z) {
          return function (_163) {
              if (_163 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (_163 instanceof Data_Maybe.Just) {
                  return f(z)(_163.value0);
              };
              throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs line 51, column 1 - line 59, column 1: " + [ f.constructor.name, z.constructor.name, _163.constructor.name ]);
          };
      };
  }, function (f) {
      return function (z) {
          return function (_162) {
              if (_162 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (_162 instanceof Data_Maybe.Just) {
                  return f(_162.value0)(z);
              };
              throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-foldable-traversable/src/Data/Foldable.purs line 51, column 1 - line 59, column 1: " + [ f.constructor.name, z.constructor.name, _162.constructor.name ]);
          };
      };
  });
  var foldableArray = new Foldable(function (__dict_Monoid_19) {
      return function (f) {
          return function (xs) {
              return foldr(foldableArray)(function (x) {
                  return function (acc) {
                      return Prelude["<>"](__dict_Monoid_19["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(__dict_Monoid_19))(xs);
          };
      };
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (__dict_Foldable_26) {
      return function (__dict_BooleanAlgebra_27) {
          return function (p) {
              return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.runDisj)(foldMap(__dict_Foldable_26)(Data_Monoid_Disj.monoidDisj(__dict_BooleanAlgebra_27))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.Disj)(p)));
          };
      };
  };
  var elem = function (__dict_Foldable_28) {
      return function (__dict_Eq_29) {
          return Prelude["<<<"](Prelude.semigroupoidFn)(any(__dict_Foldable_28)(Prelude.booleanAlgebraBoolean))(Prelude["=="](__dict_Eq_29));
      };
  };
  var notElem = function (__dict_Foldable_30) {
      return function (__dict_Eq_31) {
          return function (x) {
              return Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.not(Prelude.booleanAlgebraBoolean))(elem(__dict_Foldable_30)(__dict_Eq_31)(x));
          };
      };
  };
  var all = function (__dict_Foldable_34) {
      return function (__dict_BooleanAlgebra_35) {
          return function (p) {
              return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Conj.runConj)(foldMap(__dict_Foldable_34)(Data_Monoid_Conj.monoidConj(__dict_BooleanAlgebra_35))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Conj.Conj)(p)));
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["notElem"] = notElem;
  exports["elem"] = elem;
  exports["all"] = all;
  exports["any"] = any;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;;
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Traversable

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont (fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList (x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray (list) {
      var arr = [];
      while (list !== emptyList) {
        arr.push(list.head);
        list = list.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Prelude.functorArray;
  }, function (__dict_Applicative_11) {
      return traverse(traversableArray)(__dict_Applicative_11)(Prelude.id(Prelude.categoryFn));
  }, function (__dict_Applicative_10) {
      return $foreign.traverseArrayImpl(Prelude.apply(__dict_Applicative_10["__superclass_Prelude.Apply_0"]()))(Prelude.map((__dict_Applicative_10["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_10));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["sequence"] = sequence;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;;
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Prelude.Functor(function (f) {
      return function (_213) {
          if (_213 instanceof Left) {
              return new Left(_213.value0);
          };
          if (_213 instanceof Right) {
              return new Right(f(_213.value0));
          };
          throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-either/src/Data/Either.purs line 52, column 1 - line 56, column 1: " + [ f.constructor.name, _213.constructor.name ]);
      };
  });
  var foldableEither = new Data_Foldable.Foldable(function (__dict_Monoid_6) {
      return function (f) {
          return function (_225) {
              if (_225 instanceof Left) {
                  return Data_Monoid.mempty(__dict_Monoid_6);
              };
              if (_225 instanceof Right) {
                  return f(_225.value0);
              };
              throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-either/src/Data/Either.purs line 201, column 1 - line 209, column 1: " + [ f.constructor.name, _225.constructor.name ]);
          };
      };
  }, function (f) {
      return function (z) {
          return function (_224) {
              if (_224 instanceof Left) {
                  return z;
              };
              if (_224 instanceof Right) {
                  return f(z)(_224.value0);
              };
              throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-either/src/Data/Either.purs line 201, column 1 - line 209, column 1: " + [ f.constructor.name, z.constructor.name, _224.constructor.name ]);
          };
      };
  }, function (f) {
      return function (z) {
          return function (_223) {
              if (_223 instanceof Left) {
                  return z;
              };
              if (_223 instanceof Right) {
                  return f(_223.value0)(z);
              };
              throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-either/src/Data/Either.purs line 201, column 1 - line 209, column 1: " + [ f.constructor.name, z.constructor.name, _223.constructor.name ]);
          };
      };
  });
  var either = function (f) {
      return function (g) {
          return function (_212) {
              if (_212 instanceof Left) {
                  return f(_212.value0);
              };
              if (_212 instanceof Right) {
                  return g(_212.value0);
              };
              throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-either/src/Data/Either.purs line 28, column 1 - line 29, column 1: " + [ f.constructor.name, g.constructor.name, _212.constructor.name ]);
          };
      };
  }; 
  var applyEither = new Prelude.Apply(function () {
      return functorEither;
  }, function (_215) {
      return function (r) {
          if (_215 instanceof Left) {
              return new Left(_215.value0);
          };
          if (_215 instanceof Right) {
              return Prelude["<$>"](functorEither)(_215.value0)(r);
          };
          throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-either/src/Data/Either.purs line 92, column 1 - line 116, column 1: " + [ _215.constructor.name, r.constructor.name ]);
      };
  });
  var bindEither = new Prelude.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (_211) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Prelude.Applicative(function () {
      return applyEither;
  }, Right.create);
  var altEither = new Control_Alt.Alt(function () {
      return functorEither;
  }, function (_216) {
      return function (r) {
          if (_216 instanceof Left) {
              return r;
          };
          return _216;
      };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["altEither"] = altEither;
  exports["bindEither"] = bindEither;
  exports["foldableEither"] = foldableEither;;
 
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var lookup = function (__dict_Foldable_19) {
      return function (__dict_Eq_20) {
          return function (a) {
              return function (f) {
                  return Data_Maybe_First.runFirst(Data_Foldable.foldMap(__dict_Foldable_19)(Data_Maybe_First.monoidFirst)(function (_283) {
                      var _828 = Prelude["=="](__dict_Eq_20)(a)(_283.value0);
                      if (_828) {
                          return new Data_Maybe.Just(_283.value1);
                      };
                      if (!_828) {
                          return Data_Maybe.Nothing.value;
                      };
                      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-tuples/src/Data/Tuple.purs line 173, column 1 - line 174, column 1: " + [ _828.constructor.name ]);
                  })(f));
              };
          };
      };
  };
  exports["Tuple"] = Tuple;
  exports["lookup"] = lookup;;
 
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Monad_Error = PS["Control.Monad.Error"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];     
  var ErrorT = function (x) {
      return x;
  };
  var runErrorT = function (_350) {
      return _350;
  };
  var monadTransErrorT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_2) {
      return function (m) {
          return ErrorT(Prelude.bind(__dict_Monad_2["__superclass_Prelude.Bind_1"]())(m)(function (_28) {
              return Prelude["return"](__dict_Monad_2["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(_28));
          }));
      };
  });
  var functorErrorT = function (__dict_Functor_12) {
      return new Prelude.Functor(function (f) {
          return Prelude["<<<"](Prelude.semigroupoidFn)(ErrorT)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["<$>"](__dict_Functor_12)(Prelude["<$>"](Data_Either.functorEither)(f)))(runErrorT));
      });
  };
  var applyErrorT = function (__dict_Apply_14) {
      return new Prelude.Apply(function () {
          return functorErrorT(__dict_Apply_14["__superclass_Prelude.Functor_0"]());
      }, function (_351) {
          return function (_352) {
              return ErrorT(Prelude["<*>"](__dict_Apply_14)(Prelude["<$>"](__dict_Apply_14["__superclass_Prelude.Functor_0"]())(Control_Apply.lift2(Data_Either.applyEither)(Prelude["$"]))(_351))(_352));
          };
      });
  };
  var bindErrorT = function (__dict_Monad_13) {
      return new Prelude.Bind(function () {
          return applyErrorT((__dict_Monad_13["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
      }, function (m) {
          return function (f) {
              return ErrorT(Prelude.bind(__dict_Monad_13["__superclass_Prelude.Bind_1"]())(runErrorT(m))(function (_26) {
                  if (_26 instanceof Data_Either.Left) {
                      return Prelude["return"](__dict_Monad_13["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(_26.value0));
                  };
                  if (_26 instanceof Data_Either.Right) {
                      return runErrorT(f(_26.value0));
                  };
                  throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-transformers/src/Control/Monad/Error/Trans.purs line 55, column 1 - line 62, column 1: " + [ _26.constructor.name ]);
              }));
          };
      });
  };
  var applicativeErrorT = function (__dict_Applicative_15) {
      return new Prelude.Applicative(function () {
          return applyErrorT(__dict_Applicative_15["__superclass_Prelude.Apply_0"]());
      }, function (a) {
          return ErrorT(Prelude.pure(__dict_Applicative_15)(new Data_Either.Right(a)));
      });
  };
  var monadErrorT = function (__dict_Monad_7) {
      return new Prelude.Monad(function () {
          return applicativeErrorT(__dict_Monad_7["__superclass_Prelude.Applicative_0"]());
      }, function () {
          return bindErrorT(__dict_Monad_7);
      });
  };
  var monadEffError = function (__dict_Monad_8) {
      return function (__dict_MonadEff_9) {
          return new Control_Monad_Eff_Class.MonadEff(function () {
              return monadErrorT(__dict_Monad_8);
          }, Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Trans.lift(monadTransErrorT)(__dict_Monad_8))(Control_Monad_Eff_Class.liftEff(__dict_MonadEff_9)));
      };
  };
  exports["ErrorT"] = ErrorT;
  exports["runErrorT"] = runErrorT;
  exports["functorErrorT"] = functorErrorT;
  exports["applyErrorT"] = applyErrorT;
  exports["applicativeErrorT"] = applicativeErrorT;
  exports["bindErrorT"] = bindErrorT;
  exports["monadErrorT"] = monadErrorT;
  exports["monadTransErrorT"] = monadTransErrorT;
  exports["monadEffError"] = monadEffError;;
 
})(PS["Control.Monad.Error.Trans"] = PS["Control.Monad.Error.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Error_Trans = PS["Control.Monad.Error.Trans"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_Error = PS["Control.Monad.Error"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];     
  var MonadError = function (catchError, throwError) {
      this.catchError = catchError;
      this.throwError = throwError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };
  var monadErrorErrorT = function (__dict_Monad_1) {
      return new MonadError(function (m) {
          return function (h) {
              return Control_Monad_Error_Trans.ErrorT(Prelude.bind(__dict_Monad_1["__superclass_Prelude.Bind_1"]())(Control_Monad_Error_Trans.runErrorT(m))(function (_45) {
                  if (_45 instanceof Data_Either.Left) {
                      return Control_Monad_Error_Trans.runErrorT(h(_45.value0));
                  };
                  if (_45 instanceof Data_Either.Right) {
                      return Prelude["return"](__dict_Monad_1["__superclass_Prelude.Applicative_0"]())(new Data_Either.Right(_45.value0));
                  };
                  throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs line 65, column 1 - line 73, column 1: " + [ _45.constructor.name ]);
              }));
          };
      }, function (e) {
          return Control_Monad_Error_Trans.ErrorT(Prelude["return"](__dict_Monad_1["__superclass_Prelude.Applicative_0"]())(new Data_Either.Left(e)));
      });
  };
  var monadErrorEither = new MonadError(function (_377) {
      return function (h) {
          if (_377 instanceof Data_Either.Left) {
              return h(_377.value0);
          };
          if (_377 instanceof Data_Either.Right) {
              return new Data_Either.Right(_377.value0);
          };
          throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-transformers/src/Control/Monad/Error/Class.purs line 55, column 1 - line 60, column 1: " + [ _377.constructor.name, h.constructor.name ]);
      };
  }, Data_Either.Left.create);
  var catchError = function (dict) {
      return dict.catchError;
  };
  exports["MonadError"] = MonadError;
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;
  exports["monadErrorEither"] = monadErrorEither;
  exports["monadErrorErrorT"] = monadErrorErrorT;;
 
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.ST

  exports.newSTRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readSTRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.writeSTRef = function (ref) {
    return function (a) {
      return function () {
        /* jshint boss: true */
        return ref.value = a;
      };
    };
  };
 
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Control.Monad.ST"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];
  exports["writeSTRef"] = $foreign.writeSTRef;
  exports["readSTRef"] = $foreign.readSTRef;
  exports["newSTRef"] = $foreign.newSTRef;;
 
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Array

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = [];
      for (var i = start, n = 0; i !== end; i += step) {
        result[n++] = i;
      }
      result[n] = i;
      return result;
    };
  };

  exports.replicate = function (n) {
    return function (v) {
      if (n < 1) return [];
      var r = new Array(n);
      for (var i = 0; i < n; i++) r[i] = v;
      return r;
    };
  };

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.concat = function (xss) {
    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.drop = function (n) {
    return function (l) {
      return n < 1 ? l : l.slice(n);
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];     
  var $colon = $foreign.cons;
  var zip = $foreign.zipWith(Data_Tuple.Tuple.create);
  var uncons = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x, 
              tail: xs
          });
      };
  });                          
  var tail = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (_382) {
      return function (xs) {
          return new Data_Maybe.Just(xs);
      };
  });
  var some = function (__dict_Alternative_4) {
      return function (__dict_Lazy_5) {
          return function (v) {
              return Prelude["<*>"]((__dict_Alternative_4["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_4["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())($colon)(v))(Control_Lazy.defer(__dict_Lazy_5)(function (_380) {
                  return many(__dict_Alternative_4)(__dict_Lazy_5)(v);
              }));
          };
      };
  };
  var many = function (__dict_Alternative_6) {
      return function (__dict_Lazy_7) {
          return function (v) {
              return Control_Alt["<|>"]((__dict_Alternative_6["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_6)(__dict_Lazy_7)(v))(Prelude.pure(__dict_Alternative_6["__superclass_Prelude.Applicative_0"]())([  ]));
          };
      };
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var $bang$bang = index;
  var head = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (_381) {
          return new Data_Maybe.Just(x);
      };
  });
  exports["zip"] = zip;
  exports["index"] = index;
  exports["!!"] = $bang$bang;
  exports["uncons"] = uncons;
  exports["tail"] = tail;
  exports["head"] = head;
  exports[":"] = $colon;
  exports["many"] = many;
  exports["some"] = some;
  exports["zipWith"] = $foreign.zipWith;
  exports["drop"] = $foreign.drop;
  exports["slice"] = $foreign.slice;
  exports["length"] = $foreign.length;
  exports["replicate"] = $foreign.replicate;
  exports["range"] = $foreign.range;;
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Array.ST

  exports.runSTArray = function (f) {
    return f;
  };

  exports.emptySTArray = function () {
    return [];
  };

  exports.pushAllSTArray = function (xs) {
    return function (as) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };
 
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Data.Array.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  var pushSTArray = function (arr) {
      return function (a) {
          return $foreign.pushAllSTArray(arr)([ a ]);
      };
  };
  exports["pushSTArray"] = pushSTArray;
  exports["emptySTArray"] = $foreign.emptySTArray;
  exports["runSTArray"] = $foreign.runSTArray;;
 
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Array.Unsafe

  exports.unsafeIndex = function (xs) {
    return function (n) {
      return xs[n];
    };
  };
 
})(PS["Data.Array.Unsafe"] = PS["Data.Array.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Data.Array.Unsafe"];
  var Data_Array = PS["Data.Array"];
  var Prelude = PS["Prelude"];     
  var tail = function (xs) {
      return Data_Array.slice(1)(Data_Array.length(xs))(xs);
  };
  var last = function (xs) {
      return $foreign.unsafeIndex(xs)(Prelude["-"](Prelude.ringInt)(Data_Array.length(xs))(1));
  };
  var head = function (xs) {
      return $foreign.unsafeIndex(xs)(0);
  };
  exports["last"] = last;
  exports["tail"] = tail;
  exports["head"] = head;;
 
})(PS["Data.Array.Unsafe"] = PS["Data.Array.Unsafe"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Char

  exports.toString = function (c) {
    return c;
  };
 
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Data.Char"];
  var Prelude = PS["Prelude"];
  exports["toString"] = $foreign.toString;;
 
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.unsafeFromForeign = function(value) {
    return value;
  };

  exports.typeOf = function(value) {
    return typeof value;
  };

  exports.tagOf = function(value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };

  exports.isNull = function(value) {
    return value === null;
  };

  exports.isUndefined = function(value) {
    return value === undefined;
  };

  exports.isArray = Array.isArray || function(value) {
    return Object.prototype.toString.call(value) === '[object Array]';
  };
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Data_Function = PS["Data.Function"];
  var Data_Either = PS["Data.Either"];
  var Data_Int = PS["Data.Int"];     
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var JSONError = (function () {
      function JSONError(value0) {
          this.value0 = value0;
      };
      JSONError.create = function (value0) {
          return new JSONError(value0);
      };
      return JSONError;
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if (Prelude["=="](Prelude.eqString)($foreign.tagOf(value))(tag)) {
              return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
          };
          return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
      };
  };
  var showForeignError = new Prelude.Show(function (_235) {
      if (_235 instanceof TypeMismatch) {
          return "Type mismatch: expected " + (_235.value0 + (", found " + _235.value1));
      };
      if (_235 instanceof ErrorAtIndex) {
          return "Error at array index " + (Prelude.show(Prelude.showInt)(_235.value0) + (": " + Prelude.show(showForeignError)(_235.value1)));
      };
      if (_235 instanceof ErrorAtProperty) {
          return "Error at property " + (Prelude.show(Prelude.showString)(_235.value0) + (": " + Prelude.show(showForeignError)(_235.value1)));
      };
      if (_235 instanceof JSONError) {
          return "JSON error: " + _235.value0;
      };
      throw new Error("Failed pattern match: " + [ _235.constructor.name ]);
  });
  var readString = unsafeReadTagged("String");  
  var readArray = function (value) {
      if ($foreign.isArray(value)) {
          return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
      };
      return new Data_Either.Left(new TypeMismatch("array", $foreign.tagOf(value)));
  };
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["JSONError"] = JSONError;
  exports["readArray"] = readArray;
  exports["readString"] = readString;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["showForeignError"] = showForeignError;
  exports["isUndefined"] = $foreign.isUndefined;
  exports["isNull"] = $foreign.isNull;
  exports["typeOf"] = $foreign.typeOf;;
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foreign.Index

  exports.unsafeReadPropImpl = function(f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  exports.unsafeHasOwnProperty = function(prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function(prop, value) {
    return prop in value;
  };
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Data.Foreign.Index"];
  var Data_Function = PS["Data.Function"];
  var Data_Foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Int = PS["Data.Int"];     
  var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
      this.errorAt = errorAt;
      this.hasOwnProperty = hasOwnProperty;
      this.hasProperty = hasProperty;
      this.ix = ix;
  };
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
      };
  };
  var prop = unsafeReadProp;
  var ix = function (dict) {
      return dict.ix;
  };
  var $bang = function (__dict_Index_0) {
      return ix(__dict_Index_0);
  };                         
  var hasPropertyImpl = function (p) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Prelude["||"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object"))(Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function"))) {
              return $foreign.unsafeHasProperty(p, value);
          };
          return false;
      };
  };
  var hasProperty = function (dict) {
      return dict.hasProperty;
  };
  var hasOwnPropertyImpl = function (p) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Prelude["||"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object"))(Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function"))) {
              return $foreign.unsafeHasOwnProperty(p, value);
          };
          return false;
      };
  };                                                                                                                   
  var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(prop));
  var hasOwnProperty = function (dict) {
      return dict.hasOwnProperty;
  };
  var errorAt = function (dict) {
      return dict.errorAt;
  };
  exports["Index"] = Index;
  exports["errorAt"] = errorAt;
  exports["hasOwnProperty"] = hasOwnProperty;
  exports["hasProperty"] = hasProperty;
  exports["!"] = $bang;
  exports["ix"] = ix;
  exports["prop"] = prop;
  exports["indexString"] = indexString;;
 
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Array = PS["Data.Array"];
  var Data_Foreign_Null = PS["Data.Foreign.Null"];
  var Data_Foreign_Undefined = PS["Data.Foreign.Undefined"];
  var Data_Foreign_NullOrUndefined = PS["Data.Foreign.NullOrUndefined"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Int = PS["Data.Int"];     
  var IsForeign = function (read) {
      this.read = read;
  };
  var stringIsForeign = new IsForeign(Data_Foreign.readString);
  var read = function (dict) {
      return dict.read;
  };
  var readWith = function (__dict_IsForeign_1) {
      return function (f) {
          return function (value) {
              return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Either.Left.create)(f))(Data_Either.Right.create)(read(__dict_IsForeign_1)(value));
          };
      };
  };
  var readProp = function (__dict_IsForeign_2) {
      return function (__dict_Index_3) {
          return function (prop) {
              return function (value) {
                  return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_3)(value)(prop))(readWith(__dict_IsForeign_2)(Data_Foreign_Index.errorAt(__dict_Index_3)(prop)));
              };
          };
      };
  };                                                             
  var arrayIsForeign = function (__dict_IsForeign_7) {
      return new IsForeign(function (value) {
          var readElement = function (i) {
              return function (value_1) {
                  return readWith(__dict_IsForeign_7)(Data_Foreign.ErrorAtIndex.create(i))(value_1);
              };
          };
          var readElements = function (arr) {
              return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(Prelude.zero(Prelude.semiringInt))(Data_Array.length(arr)))(arr));
          };
          return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
      });
  };
  exports["IsForeign"] = IsForeign;
  exports["readProp"] = readProp;
  exports["readWith"] = readWith;
  exports["read"] = read;
  exports["stringIsForeign"] = stringIsForeign;
  exports["arrayIsForeign"] = arrayIsForeign;;
 
})(PS["Data.Foreign.Class"] = PS["Data.Foreign.Class"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foreign.EasyFFI

  exports.unsafeForeignProcedure = function(args) {
      return function (stmt) {
          return Function(wrap(args.slice()))();
          function wrap() {
              return !args.length ? stmt : 'return function (' + args.shift() + ') { ' + wrap() + ' };';
          }
      };
  };
 
})(PS["Data.Foreign.EasyFFI"] = PS["Data.Foreign.EasyFFI"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Data.Foreign.EasyFFI"];
  var Prelude = PS["Prelude"];     
  var unsafeForeignFunction = function (args) {
      return function (expr) {
          return $foreign.unsafeForeignProcedure(args)("return " + (expr + ";"));
      };
  };
  exports["unsafeForeignFunction"] = unsafeForeignFunction;;
 
})(PS["Data.Foreign.EasyFFI"] = PS["Data.Foreign.EasyFFI"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Identity = function (x) {
      return x;
  };
  var runIdentity = function (_241) {
      return _241;
  };
  var functorIdentity = new Prelude.Functor(function (f) {
      return function (_264) {
          return f(_264);
      };
  });
  var applyIdentity = new Prelude.Apply(function () {
      return functorIdentity;
  }, function (_265) {
      return function (_266) {
          return _265(_266);
      };
  });
  var bindIdentity = new Prelude.Bind(function () {
      return applyIdentity;
  }, function (_267) {
      return function (f) {
          return f(_267);
      };
  });
  var applicativeIdentity = new Prelude.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Prelude.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["runIdentity"] = runIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;;
 
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];     
  var Unfoldable = function (unfoldr) {
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable(function (f) {
      return function (b) {
          return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
              var _56 = Data_Array_ST.emptySTArray();
              var _55 = Control_Monad_ST.newSTRef(b)();
              (function () {
                  while (!(function __do() {
                      var _54 = Control_Monad_ST.readSTRef(_55)();
                      return (function () {
                          var _803 = f(_54);
                          if (_803 instanceof Data_Maybe.Nothing) {
                              return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                          };
                          if (_803 instanceof Data_Maybe.Just) {
                              return function __do() {
                                  Data_Array_ST.pushSTArray(_56)(_803.value0.value0)();
                                  Control_Monad_ST.writeSTRef(_55)(_803.value0.value1)();
                                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(false)();
                              };
                          };
                          throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-unfoldable/src/Data/Unfoldable.purs line 28, column 1 - line 40, column 16: " + [ _803.constructor.name ]);
                      })()();
                  })()) {

                  };
                  return {};
              })();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_56)();
          }));
      };
  });
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;;
 
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_MonadPlus = PS["Control.MonadPlus"];     
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var $colon = Cons.create;
  var uncons = function (_485) {
      if (_485 instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (_485 instanceof Cons) {
          return new Data_Maybe.Just({
              head: _485.value0, 
              tail: _485.value1
          });
      };
      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-lists/src/Data/List.purs line 265, column 1 - line 266, column 1: " + [ _485.constructor.name ]);
  };
  var tail = function (_483) {
      if (_483 instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (_483 instanceof Cons) {
          return new Data_Maybe.Just(_483.value1);
      };
      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-lists/src/Data/List.purs line 249, column 1 - line 250, column 1: " + [ _483.constructor.name ]);
  };
  var some = function (__dict_Alternative_8) {
      return function (__dict_Lazy_9) {
          return function (v) {
              return Prelude["<*>"]((__dict_Alternative_8["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_8["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(v))(Control_Lazy.defer(__dict_Lazy_9)(function (_475) {
                  return many(__dict_Alternative_8)(__dict_Lazy_9)(v);
              }));
          };
      };
  };
  var many = function (__dict_Alternative_10) {
      return function (__dict_Lazy_11) {
          return function (v) {
              return Control_Alt["<|>"]((__dict_Alternative_10["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_10)(__dict_Lazy_11)(v))(Prelude.pure(__dict_Alternative_10["__superclass_Prelude.Applicative_0"]())(Nil.value));
          };
      };
  };                     
  var head = function (_481) {
      if (_481 instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (_481 instanceof Cons) {
          return new Data_Maybe.Just(_481.value0);
      };
      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-lists/src/Data/List.purs line 234, column 1 - line 235, column 1: " + [ _481.constructor.name ]);
  }; 
  var fromList = function (__dict_Unfoldable_15) {
      return Data_Unfoldable.unfoldr(__dict_Unfoldable_15)(function (xs) {
          return Prelude["<$>"](Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["uncons"] = uncons;
  exports["tail"] = tail;
  exports["head"] = head;
  exports[":"] = $colon;
  exports["many"] = many;
  exports["some"] = some;
  exports["fromList"] = fromList;;
 
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.String

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports._toChar = function (just) {
    return function (nothing) {
      return function (s) {
        return s.length === 1 ? just(s) : nothing;
      };
    };
  };

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substr(n);
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toCharArray = function (s) {
    return s.split("");
  };
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Data.String"];
  var Data_Char = PS["Data.Char"];
  var Prelude = PS["Prelude"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var toChar = $foreign._toChar(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);            
  var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromChar = Data_Char.toString;
  var singleton = fromChar;                                                               
  var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["singleton"] = singleton;
  exports["indexOf"] = indexOf;
  exports["toChar"] = toChar;
  exports["fromChar"] = fromChar;
  exports["charAt"] = charAt;
  exports["toCharArray"] = $foreign.toCharArray;
  exports["split"] = $foreign.split;
  exports["drop"] = $foreign.drop;
  exports["take"] = $foreign.take;
  exports["length"] = $foreign.length;
  exports["fromCharArray"] = $foreign.fromCharArray;;
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // module SandScript.Util

  exports.str2num = function str2num(str) {
    return (str | 0);
  }

  exports.unwords = function unwords(arr) {
    return arr.join(" ");
  }
 
})(PS["SandScript.Util"] = PS["SandScript.Util"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_String = PS["Data.String"];     
  var Position = (function () {
      function Position(value0) {
          this.value0 = value0;
      };
      Position.create = function (value0) {
          return new Position(value0);
      };
      return Position;
  })();
  var updatePosString = function (pos) {
      return function (str) {
          var updatePosChar = function (_192) {
              return function (c) {
                  if (c === "\n") {
                      return new Position({
                          line: Prelude["+"](Prelude.semiringInt)(_192.value0.line)(1), 
                          column: 1
                      });
                  };
                  if (c === "\r") {
                      return new Position({
                          line: Prelude["+"](Prelude.semiringInt)(_192.value0.line)(1), 
                          column: 1
                      });
                  };
                  if (c === "\t") {
                      return new Position({
                          line: _192.value0.line, 
                          column: Prelude["-"](Prelude.ringInt)(Prelude["+"](Prelude.semiringInt)(_192.value0.column)(8))(Prelude.mod(Prelude.moduloSemiringInt)(Prelude["-"](Prelude.ringInt)(_192.value0.column)(1))(8))
                      });
                  };
                  return new Position({
                      line: _192.value0.line, 
                      column: Prelude["+"](Prelude.semiringInt)(_192.value0.column)(1)
                  });
              };
          };
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(updatePosChar)(pos)(Data_String.split("")(str));
      };
  };
  var showPosition = new Prelude.Show(function (_189) {
      return "Position { line: " + (Prelude.show(Prelude.showInt)(_189.value0.line) + (", column: " + (Prelude.show(Prelude.showInt)(_189.value0.column) + " }")));
  });
  var initialPos = new Position({
      line: 1, 
      column: 1
  });
  exports["Position"] = Position;
  exports["updatePosString"] = updatePosString;
  exports["initialPos"] = initialPos;
  exports["showPosition"] = showPosition;;
 
})(PS["Text.Parsing.Parser.Pos"] = PS["Text.Parsing.Parser.Pos"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Text_Parsing_Parser_Pos = PS["Text.Parsing.Parser.Pos"];
  var Prelude = PS["Prelude"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_Error = PS["Control.Monad.Error"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Error_Trans = PS["Control.Monad.Error.Trans"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];     
  var ParseError = (function () {
      function ParseError(value0) {
          this.value0 = value0;
      };
      ParseError.create = function (value0) {
          return new ParseError(value0);
      };
      return ParseError;
  })();
  var PState = (function () {
      function PState(value0) {
          this.value0 = value0;
      };
      PState.create = function (value0) {
          return new PState(value0);
      };
      return PState;
  })();
  var ParserT = function (x) {
      return x;
  };
  var unParserT = function (_682) {
      return _682;
  };
  var showParseError = new Prelude.Show(function (_683) {
      return "ParseError { message: " + (_683.value0.message + (", position: " + (Prelude.show(Text_Parsing_Parser_Pos.showPosition)(_683.value0.position) + " }")));
  });
  var runParserT = function (__dict_Monad_0) {
      return function (s) {
          return function (p) {
              return Prelude.bind(__dict_Monad_0["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (_64) {
                  return Prelude["return"](__dict_Monad_0["__superclass_Prelude.Applicative_0"]())(_64.result);
              });
          };
      };
  };
  var runParser = function (s) {
      return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Identity.runIdentity)(runParserT(Data_Identity.monadIdentity)(new PState({
          input: s, 
          position: Text_Parsing_Parser_Pos.initialPos
      })));
  };
  var parseFailed = function (s) {
      return function (pos) {
          return function (message) {
              return {
                  input: s, 
                  consumed: false, 
                  result: new Data_Either.Left(new ParseError({
                      message: message, 
                      position: pos
                  })), 
                  position: pos
              };
          };
      };
  };
  var lazyParserT = new Control_Lazy.Lazy(function (f) {
      return ParserT(function (s) {
          return unParserT(f(Prelude.unit))(s);
      });
  });
  var functorParserT = function (__dict_Functor_5) {
      return new Prelude.Functor(function (f) {
          return function (p) {
              var f$prime = function (o) {
                  return {
                      input: o.input, 
                      result: Prelude["<$>"](Data_Either.functorEither)(f)(o.result), 
                      consumed: o.consumed, 
                      position: o.position
                  };
              };
              return ParserT(function (s) {
                  return Prelude["<$>"](__dict_Functor_5)(f$prime)(unParserT(p)(s));
              });
          };
      });
  };
  var fail = function (__dict_Monad_6) {
      return function (message) {
          return ParserT(function (_681) {
              return Prelude["return"](__dict_Monad_6["__superclass_Prelude.Applicative_0"]())(parseFailed(_681.value0.input)(_681.value0.position)(message));
          });
      };
  };
  var monadParserT = function (__dict_Monad_4) {
      return new Prelude.Monad(function () {
          return applicativeParserT(__dict_Monad_4);
      }, function () {
          return bindParserT(__dict_Monad_4);
      });
  };
  var bindParserT = function (__dict_Monad_9) {
      return new Prelude.Bind(function () {
          return applyParserT(__dict_Monad_9);
      }, function (p) {
          return function (f) {
              var updateConsumedFlag = function (c) {
                  return function (o) {
                      return {
                          input: o.input, 
                          consumed: Prelude["||"](Prelude.booleanAlgebraBoolean)(c)(o.consumed), 
                          result: o.result, 
                          position: o.position
                      };
                  };
              };
              return ParserT(function (s) {
                  return Prelude[">>="](__dict_Monad_9["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (o) {
                      if (o.result instanceof Data_Either.Left) {
                          return Prelude["return"](__dict_Monad_9["__superclass_Prelude.Applicative_0"]())({
                              input: o.input, 
                              result: new Data_Either.Left(o.result.value0), 
                              consumed: o.consumed, 
                              position: o.position
                          });
                      };
                      if (o.result instanceof Data_Either.Right) {
                          return Prelude["<$>"](((__dict_Monad_9["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(updateConsumedFlag(o.consumed))(unParserT(f(o.result.value0))(new PState({
                              input: o.input, 
                              position: o.position
                          })));
                      };
                      throw new Error("Failed pattern match: " + [ o.result.constructor.name ]);
                  });
              });
          };
      });
  };
  var applyParserT = function (__dict_Monad_10) {
      return new Prelude.Apply(function () {
          return functorParserT(((__dict_Monad_10["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
      }, Prelude.ap(monadParserT(__dict_Monad_10)));
  };
  var applicativeParserT = function (__dict_Monad_11) {
      return new Prelude.Applicative(function () {
          return applyParserT(__dict_Monad_11);
      }, function (a) {
          return ParserT(function (_677) {
              return Prelude.pure(__dict_Monad_11["__superclass_Prelude.Applicative_0"]())({
                  input: _677.value0.input, 
                  result: new Data_Either.Right(a), 
                  consumed: false, 
                  position: _677.value0.position
              });
          });
      });
  };
  var altParserT = function (__dict_Monad_13) {
      return new Control_Alt.Alt(function () {
          return functorParserT(((__dict_Monad_13["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
      }, function (p1) {
          return function (p2) {
              return ParserT(function (s) {
                  return Prelude[">>="](__dict_Monad_13["__superclass_Prelude.Bind_1"]())(unParserT(p1)(s))(function (o) {
                      if (o.result instanceof Data_Either.Left && Prelude.not(Prelude.booleanAlgebraBoolean)(o.consumed)) {
                          return unParserT(p2)(s);
                      };
                      return Prelude["return"](__dict_Monad_13["__superclass_Prelude.Applicative_0"]())(o);
                  });
              });
          };
      });
  };
  var plusParserT = function (__dict_Monad_7) {
      return new Control_Plus.Plus(function () {
          return altParserT(__dict_Monad_7);
      }, fail(__dict_Monad_7)("No alternative"));
  };
  var alternativeParserT = function (__dict_Monad_12) {
      return new Control_Alternative.Alternative(function () {
          return plusParserT(__dict_Monad_12);
      }, function () {
          return applicativeParserT(__dict_Monad_12);
      });
  };
  exports["ParserT"] = ParserT;
  exports["PState"] = PState;
  exports["ParseError"] = ParseError;
  exports["parseFailed"] = parseFailed;
  exports["fail"] = fail;
  exports["runParser"] = runParser;
  exports["runParserT"] = runParserT;
  exports["unParserT"] = unParserT;
  exports["showParseError"] = showParseError;
  exports["functorParserT"] = functorParserT;
  exports["applyParserT"] = applyParserT;
  exports["applicativeParserT"] = applicativeParserT;
  exports["altParserT"] = altParserT;
  exports["plusParserT"] = plusParserT;
  exports["alternativeParserT"] = alternativeParserT;
  exports["bindParserT"] = bindParserT;
  exports["monadParserT"] = monadParserT;
  exports["lazyParserT"] = lazyParserT;;
 
})(PS["Text.Parsing.Parser"] = PS["Text.Parsing.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["SandScript.Util"];
  var Prelude = PS["Prelude"];
  var Data_String = PS["Data.String"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Array_Unsafe = PS["Data.Array.Unsafe"];
  var Data_Array = PS["Data.Array"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Alternative = PS["Control.Alternative"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];     
  var $greater$greater = function (__dict_Monad_0) {
      return function (f) {
          return function (g) {
              return Prelude[">>="](__dict_Monad_0["__superclass_Prelude.Bind_1"]())(f)(function (_684) {
                  return g;
              });
          };
      };
  };
  var $amp = Data_Tuple.Tuple.create;
  var unwordsList = function (__dict_Show_1) {
      return Prelude["<<<"](Prelude.semigroupoidFn)($foreign.unwords)(Prelude.map(Prelude.functorArray)(Prelude.show(__dict_Show_1)));
  };                                                                                                         
  var toChars = Data_String.split("");
  var readNum = function (s) {
      if (Prelude["=="](Prelude.eqString)(s)(Prelude.show(Prelude.showInt)($foreign.str2num(s)))) {
          return Data_Maybe.Just.create($foreign.str2num(s));
      };
      if (Prelude.otherwise) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Util.purs line 33, column 1 - line 34, column 1: " + [ s.constructor.name ]);
  };
  var foldl1 = function (f) {
      return function (xs) {
          return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(Data_Array_Unsafe.head(xs))(Data_Array_Unsafe.tail(xs));
      };
  };
  exports["&"] = $amp;
  exports["readNum"] = readNum;
  exports["foldl1"] = foldl1;
  exports["unwordsList"] = unwordsList;
  exports["toChars"] = toChars;
  exports[">>"] = $greater$greater;
  exports["unwords"] = $foreign.unwords;
  exports["str2num"] = $foreign.str2num;;
 
})(PS["SandScript.Util"] = PS["SandScript.Util"] || {});
(function(exports) {
  /* global require */
  /* global exports */
  "use strict";

  // module Node.FS.Sync

  var fs = require('fs');
  exports.fs = fs;

  exports.createSync = fs.openSync; 
 
})(PS["Node.FS.Sync"] = PS["Node.FS.Sync"] || {});
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function(x) { return x; }
 
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;;
 
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var mkEff = Unsafe_Coerce.unsafeCoerce;
  exports["mkEff"] = mkEff;;
 
})(PS["Node.FS.Internal"] = PS["Node.FS.Internal"] || {});
(function(exports) {
  /* global exports */
  /* global Buffer */
  /* global require */
  "use strict";

  exports.toStringImpl = function (enc) {
    return function (buff) {
      return buff.toString(enc);
    };
  };
 
})(PS["Node.Buffer"] = PS["Node.Buffer"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Node.Encoding"];
  var Prelude = PS["Prelude"];     
  var ASCII = (function () {
      function ASCII() {

      };
      ASCII.value = new ASCII();
      return ASCII;
  })();
  var UTF8 = (function () {
      function UTF8() {

      };
      UTF8.value = new UTF8();
      return UTF8;
  })();
  var UTF16LE = (function () {
      function UTF16LE() {

      };
      UTF16LE.value = new UTF16LE();
      return UTF16LE;
  })();
  var UCS2 = (function () {
      function UCS2() {

      };
      UCS2.value = new UCS2();
      return UCS2;
  })();
  var Base64 = (function () {
      function Base64() {

      };
      Base64.value = new Base64();
      return Base64;
  })();
  var Binary = (function () {
      function Binary() {

      };
      Binary.value = new Binary();
      return Binary;
  })();
  var Hex = (function () {
      function Hex() {

      };
      Hex.value = new Hex();
      return Hex;
  })();
  var showEncoding = new Prelude.Show(function (_30) {
      if (_30 instanceof ASCII) {
          return "ascii";
      };
      if (_30 instanceof UTF8) {
          return "utf8";
      };
      if (_30 instanceof UTF16LE) {
          return "utf16le";
      };
      if (_30 instanceof UCS2) {
          return "ucs2";
      };
      if (_30 instanceof Base64) {
          return "base64";
      };
      if (_30 instanceof Binary) {
          return "binary";
      };
      if (_30 instanceof Hex) {
          return "hex";
      };
      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-node-buffer/src/Node/Encoding.purs line 17, column 1 - line 26, column 1: " + [ _30.constructor.name ]);
  });
  exports["ASCII"] = ASCII;
  exports["UTF8"] = UTF8;
  exports["UTF16LE"] = UTF16LE;
  exports["UCS2"] = UCS2;
  exports["Base64"] = Base64;
  exports["Binary"] = Binary;
  exports["Hex"] = Hex;
  exports["showEncoding"] = showEncoding;;
 
})(PS["Node.Encoding"] = PS["Node.Encoding"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Node.Buffer"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Maybe = PS["Data.Maybe"];
  var Node_Encoding = PS["Node.Encoding"];                                                                                     
  var toString = Prelude["<<<"](Prelude.semigroupoidFn)($foreign.toStringImpl)(Prelude.show(Node_Encoding.showEncoding));
  exports["toString"] = toString;;
 
})(PS["Node.Buffer"] = PS["Node.Buffer"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Node.FS.Sync"];
  var Prelude = PS["Prelude"];
  var Node_FS_Internal = PS["Node.FS.Internal"];
  var Data_Function = PS["Data.Function"];
  var Node_FS_Perms = PS["Node.FS.Perms"];
  var Data_Date = PS["Data.Date"];
  var Node_Buffer = PS["Node.Buffer"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Time = PS["Data.Time"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Stats = PS["Node.FS.Stats"];
  var Node_Path = PS["Node.Path"];     
  var R = (function () {
      function R() {

      };
      R.value = new R();
      return R;
  })();
  var R_PLUS = (function () {
      function R_PLUS() {

      };
      R_PLUS.value = new R_PLUS();
      return R_PLUS;
  })();
  var RS = (function () {
      function RS() {

      };
      RS.value = new RS();
      return RS;
  })();
  var RS_PLUS = (function () {
      function RS_PLUS() {

      };
      RS_PLUS.value = new RS_PLUS();
      return RS_PLUS;
  })();
  var W = (function () {
      function W() {

      };
      W.value = new W();
      return W;
  })();
  var WX = (function () {
      function WX() {

      };
      WX.value = new WX();
      return WX;
  })();
  var W_PLUS = (function () {
      function W_PLUS() {

      };
      W_PLUS.value = new W_PLUS();
      return W_PLUS;
  })();
  var WX_PLUS = (function () {
      function WX_PLUS() {

      };
      WX_PLUS.value = new WX_PLUS();
      return WX_PLUS;
  })();
  var A = (function () {
      function A() {

      };
      A.value = new A();
      return A;
  })();
  var AX = (function () {
      function AX() {

      };
      AX.value = new AX();
      return AX;
  })();
  var A_PLUS = (function () {
      function A_PLUS() {

      };
      A_PLUS.value = new A_PLUS();
      return A_PLUS;
  })();
  var AX_PLUS = (function () {
      function AX_PLUS() {

      };
      AX_PLUS.value = new AX_PLUS();
      return AX_PLUS;
  })();
  var readFile = function (file) {
      return Node_FS_Internal.mkEff(function (_653) {
          return $foreign.fs.readFileSync(file, {});
      });
  };
  var fdOpen = function (file) {
      return function (flags) {
          return function (mode) {
              var toStr = function (_670) {
                  if (_670 instanceof R) {
                      return "r";
                  };
                  if (_670 instanceof R_PLUS) {
                      return "r+";
                  };
                  if (_670 instanceof RS) {
                      return "rs";
                  };
                  if (_670 instanceof RS_PLUS) {
                      return "rs+";
                  };
                  if (_670 instanceof W) {
                      return "w";
                  };
                  if (_670 instanceof WX) {
                      return "wx";
                  };
                  if (_670 instanceof W_PLUS) {
                      return "w+";
                  };
                  if (_670 instanceof WX_PLUS) {
                      return "wx+";
                  };
                  if (_670 instanceof A) {
                      return "a";
                  };
                  if (_670 instanceof AX) {
                      return "ax";
                  };
                  if (_670 instanceof A_PLUS) {
                      return "a+";
                  };
                  if (_670 instanceof AX_PLUS) {
                      return "ax+";
                  };
                  throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-node-fs/src/Node/FS/Sync.purs line 346, column 5 - line 347, column 5: " + [ _670.constructor.name ]);
              };
              if (mode instanceof Data_Maybe.Nothing) {
                  return Node_FS_Internal.mkEff(function (_659) {
                      return $foreign.fs.openSync(file, toStr(flags));
                  });
              };
              if (mode instanceof Data_Maybe.Just) {
                  return Node_FS_Internal.mkEff(function (_660) {
                      return $foreign.createSync(file, toStr(flags), mode.value0);
                  });
              };
              throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-node-fs/src/Node/FS/Sync.purs line 336, column 1 - line 341, column 1: " + [ mode.constructor.name ]);
          };
      };
  };
  var fdClose = function (fd) {
      return Node_FS_Internal.mkEff(function (_666) {
          return $foreign.fs.closeSync(fd);
      });
  };
  exports["R"] = R;
  exports["R_PLUS"] = R_PLUS;
  exports["RS"] = RS;
  exports["RS_PLUS"] = RS_PLUS;
  exports["W"] = W;
  exports["WX"] = WX;
  exports["W_PLUS"] = W_PLUS;
  exports["WX_PLUS"] = WX_PLUS;
  exports["A"] = A;
  exports["AX"] = AX;
  exports["A_PLUS"] = A_PLUS;
  exports["AX_PLUS"] = AX_PLUS;
  exports["fdClose"] = fdClose;
  exports["fdOpen"] = fdOpen;
  exports["readFile"] = readFile;;
 
})(PS["Node.FS.Sync"] = PS["Node.FS.Sync"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var SandScript_Util = PS["SandScript.Util"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Monad_Error = PS["Control.Monad.Error"];
  var Control_Monad_Error_Trans = PS["Control.Monad.Error.Trans"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Sync = PS["Node.FS.Sync"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];     
  var NumArgs = (function () {
      function NumArgs(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NumArgs.create = function (value0) {
          return function (value1) {
              return new NumArgs(value0, value1);
          };
      };
      return NumArgs;
  })();
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var Parserr = (function () {
      function Parserr(value0) {
          this.value0 = value0;
      };
      Parserr.create = function (value0) {
          return new Parserr(value0);
      };
      return Parserr;
  })();
  var BadSpecialForm = (function () {
      function BadSpecialForm(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      BadSpecialForm.create = function (value0) {
          return function (value1) {
              return new BadSpecialForm(value0, value1);
          };
      };
      return BadSpecialForm;
  })();
  var NotFunction = (function () {
      function NotFunction(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NotFunction.create = function (value0) {
          return function (value1) {
              return new NotFunction(value0, value1);
          };
      };
      return NotFunction;
  })();
  var UnboundedVar = (function () {
      function UnboundedVar(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      UnboundedVar.create = function (value0) {
          return function (value1) {
              return new UnboundedVar(value0, value1);
          };
      };
      return UnboundedVar;
  })();
  var PatternFail = (function () {
      function PatternFail() {

      };
      PatternFail.value = new PatternFail();
      return PatternFail;
  })();
  var ConditionalFail = (function () {
      function ConditionalFail() {

      };
      ConditionalFail.value = new ConditionalFail();
      return ConditionalFail;
  })();
  var Atom = (function () {
      function Atom(value0) {
          this.value0 = value0;
      };
      Atom.create = function (value0) {
          return new Atom(value0);
      };
      return Atom;
  })();
  var List = (function () {
      function List(value0) {
          this.value0 = value0;
      };
      List.create = function (value0) {
          return new List(value0);
      };
      return List;
  })();
  var DottedList = (function () {
      function DottedList(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      DottedList.create = function (value0) {
          return function (value1) {
              return new DottedList(value0, value1);
          };
      };
      return DottedList;
  })();
  var $$Number = (function () {
      function Number(value0) {
          this.value0 = value0;
      };
      Number.create = function (value0) {
          return new Number(value0);
      };
      return Number;
  })();
  var $$String = (function () {
      function String(value0) {
          this.value0 = value0;
      };
      String.create = function (value0) {
          return new String(value0);
      };
      return String;
  })();
  var Bool = (function () {
      function Bool(value0) {
          this.value0 = value0;
      };
      Bool.create = function (value0) {
          return new Bool(value0);
      };
      return Bool;
  })();
  var PrimitiveFunc = (function () {
      function PrimitiveFunc(value0) {
          this.value0 = value0;
      };
      PrimitiveFunc.create = function (value0) {
          return new PrimitiveFunc(value0);
      };
      return PrimitiveFunc;
  })();
  var Func = (function () {
      function Func(value0) {
          this.value0 = value0;
      };
      Func.create = function (value0) {
          return new Func(value0);
      };
      return Func;
  })();
  var EffFunc = (function () {
      function EffFunc(value0) {
          this.value0 = value0;
      };
      EffFunc.create = function (value0) {
          return new EffFunc(value0);
      };
      return EffFunc;
  })();
  var Port = (function () {
      function Port(value0) {
          this.value0 = value0;
      };
      Port.create = function (value0) {
          return new Port(value0);
      };
      return Port;
  })();
  var showLispVal = new Prelude.Show(function (_693) {
      if (_693 instanceof Atom) {
          return _693.value0;
      };
      if (_693 instanceof List && (_693.value0.length === 2 && (_693.value0[0] instanceof Atom && (_693.value0[0]).value0 === "quote"))) {
          return "'" + Prelude.show(showLispVal)(_693.value0[1]);
      };
      if (_693 instanceof List) {
          return "(" + (SandScript_Util.unwordsList(showLispVal)(_693.value0) + ")");
      };
      if (_693 instanceof DottedList) {
          return "(" + (SandScript_Util.unwordsList(showLispVal)(_693.value0) + (" . " + (Prelude.show(showLispVal)(_693.value1) + ")")));
      };
      if (_693 instanceof $$Number) {
          return Prelude.show(Prelude.showInt)(_693.value0);
      };
      if (_693 instanceof $$String) {
          return "\"" + (_693.value0 + "\"");
      };
      if (_693 instanceof Bool) {
          if (_693.value0) {
              return "true";
          };
          if (Prelude.otherwise) {
              return "false";
          };
      };
      if (_693 instanceof PrimitiveFunc) {
          return "<primitive>";
      };
      if (_693 instanceof Func) {
          return "(lambda (" + (SandScript_Util.unwords(Prelude.map(Prelude.functorArray)(Prelude.show(Prelude.showString))(_693.value0.params)) + ((function () {
              if (_693.value0.varargs instanceof Data_Maybe.Nothing) {
                  return "";
              };
              if (_693.value0.varargs instanceof Data_Maybe.Just) {
                  return " . " + _693.value0.varargs.value0;
              };
              throw new Error("Failed pattern match: " + [ _693.value0.varargs.constructor.name ]);
          })() + ") ... )"));
      };
      if (_693 instanceof EffFunc) {
          return "<IO primitive>";
      };
      throw new Error("Failed pattern match: " + [ _693.constructor.name ]);
  });
  var showLispError = new Prelude.Show(function (_696) {
      if (_696 instanceof NumArgs) {
          return "Expected " + (Prelude.show(Prelude.showInt)(_696.value0) + (" args, found values " + SandScript_Util.unwordsList(showLispVal)(_696.value1)));
      };
      if (_696 instanceof TypeMismatch) {
          return "Invalid type: expected " + (_696.value0 + (", found " + Prelude.show(showLispVal)(_696.value1)));
      };
      if (_696 instanceof Parserr) {
          return "Parse error at " + Prelude.show(Text_Parsing_Parser.showParseError)(_696.value0);
      };
      if (_696 instanceof BadSpecialForm) {
          return _696.value0 + (": " + Prelude.show(showLispVal)(_696.value1));
      };
      if (_696 instanceof NotFunction) {
          return _696.value0 + (": " + _696.value1);
      };
      if (_696 instanceof UnboundedVar) {
          return _696.value0 + (": " + _696.value1);
      };
      if (_696 instanceof PatternFail) {
          return "Pattern match fail. Suggestion: include an `else` clause.";
      };
      if (_696 instanceof ConditionalFail) {
          return "Conditional fail. Suggestion: include an `else` clause.";
      };
      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Types.purs line 80, column 1 - line 90, column 1: " + [ _696.constructor.name ]);
  });
  var fromString = function (_687) {
      if (_687 instanceof $$String) {
          return Prelude["return"](Data_Maybe.applicativeMaybe)(_687.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var eqLispVal = new Prelude.Eq(function (_694) {
      return function (_695) {
          if (_694 instanceof Atom && _695 instanceof Atom) {
              return Prelude["=="](Prelude.eqString)(_694.value0)(_695.value0);
          };
          if (_694 instanceof List && _695 instanceof List) {
              return Prelude["=="](Prelude.eqArray(eqLispVal))(_694.value0)(_695.value0);
          };
          if (_694 instanceof DottedList && _695 instanceof DottedList) {
              return Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqArray(eqLispVal))(_694.value0)(_695.value0))(Prelude["=="](eqLispVal)(_694.value1)(_695.value1));
          };
          if (_694 instanceof $$Number && _695 instanceof $$Number) {
              return Prelude["=="](Prelude.eqInt)(_694.value0)(_695.value0);
          };
          if (_694 instanceof $$String && _695 instanceof $$String) {
              return Prelude["=="](Prelude.eqString)(_694.value0)(_695.value0);
          };
          if (_694 instanceof Bool && _695 instanceof Bool) {
              return Prelude["=="](Prelude.eqBoolean)(_694.value0)(_695.value0);
          };
          return false;
      };
  });
  exports["NumArgs"] = NumArgs;
  exports["TypeMismatch"] = TypeMismatch;
  exports["Parserr"] = Parserr;
  exports["BadSpecialForm"] = BadSpecialForm;
  exports["NotFunction"] = NotFunction;
  exports["UnboundedVar"] = UnboundedVar;
  exports["PatternFail"] = PatternFail;
  exports["ConditionalFail"] = ConditionalFail;
  exports["Atom"] = Atom;
  exports["List"] = List;
  exports["DottedList"] = DottedList;
  exports["Number"] = $$Number;
  exports["String"] = $$String;
  exports["Bool"] = Bool;
  exports["PrimitiveFunc"] = PrimitiveFunc;
  exports["Func"] = Func;
  exports["EffFunc"] = EffFunc;
  exports["Port"] = Port;
  exports["fromString"] = fromString;
  exports["showLispVal"] = showLispVal;
  exports["eqLispVal"] = eqLispVal;
  exports["showLispError"] = showLispError;;
 
})(PS["SandScript.Types"] = PS["SandScript.Types"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Error_Trans = PS["Control.Monad.Error.Trans"];
  var Data_Either = PS["Data.Either"];
  var Control_Monad_Error = PS["Control.Monad.Error"];
  var SandScript_Types = PS["SandScript.Types"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var trapError$prime = function (action) {
      return Control_Monad_Error_Class.catchError(Control_Monad_Error_Class.monadErrorErrorT(Control_Monad_Eff.monadEff))(action)(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["return"](Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff)))(Prelude.show(SandScript_Types.showLispError)));
  };
  var liftThrows = function (_698) {
      if (_698 instanceof Data_Either.Left) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorErrorT(Control_Monad_Eff.monadEff))(_698.value0);
      };
      if (_698 instanceof Data_Either.Right) {
          return Prelude["return"](Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))(_698.value0);
      };
      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Errors.purs line 20, column 1 - line 21, column 1: " + [ _698.constructor.name ]);
  };
  var extractValue = function (_697) {
      if (_697 instanceof Data_Either.Right) {
          return _697.value0;
      };
      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Errors.purs line 17, column 1 - line 18, column 1: " + [ _697.constructor.name ]);
  };
  var runEffThrows = function (action) {
      return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_Error_Trans.runErrorT(trapError$prime(action)))(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["return"](Control_Monad_Eff.applicativeEff))(extractValue));
  };
  exports["runEffThrows"] = runEffThrows;
  exports["liftThrows"] = liftThrows;
  exports["extractValue"] = extractValue;;
 
})(PS["SandScript.Errors"] = PS["SandScript.Errors"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Prelude = PS["Prelude"];
  var Data_List = PS["Data.List"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Error_Trans = PS["Control.Monad.Error.Trans"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_State_Trans = PS["Control.Monad.State.Trans"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var $$try = function (__dict_Functor_1) {
      return function (p) {
          var try$prime = function (s) {
              return function (pos) {
                  return function (_726) {
                      if (_726.result instanceof Data_Either.Left) {
                          return {
                              input: s, 
                              result: _726.result, 
                              consumed: false, 
                              position: pos
                          };
                      };
                      return _726;
                  };
              };
          };
          return Text_Parsing_Parser.ParserT(function (_723) {
              return Prelude["<$>"](__dict_Functor_1)(try$prime(_723.value0.input)(_723.value0.position))(Text_Parsing_Parser.unParserT(p)(new Text_Parsing_Parser.PState({
                  input: _723.value0.input, 
                  position: _723.value0.position
              })));
          });
      };
  };
  var sepBy1 = function (__dict_Monad_6) {
      return function (p) {
          return function (sep) {
              return Prelude.bind(Text_Parsing_Parser.bindParserT(__dict_Monad_6))(p)(function (_75) {
                  return Prelude.bind(Text_Parsing_Parser.bindParserT(__dict_Monad_6))(Data_List.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_6))(Text_Parsing_Parser.lazyParserT)(Prelude.bind(Text_Parsing_Parser.bindParserT(__dict_Monad_6))(sep)(function () {
                      return p;
                  })))(function (_74) {
                      return Prelude["return"](Text_Parsing_Parser.applicativeParserT(__dict_Monad_6))(Data_List[":"](_75)(_74));
                  });
              });
          };
      };
  };
  var sepBy = function (__dict_Monad_7) {
      return function (p) {
          return function (sep) {
              return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_7))(sepBy1(__dict_Monad_7)(p)(sep))(Prelude["return"](Text_Parsing_Parser.applicativeParserT(__dict_Monad_7))(Data_List.Nil.value));
          };
      };
  };
  var endBy = function (__dict_Monad_16) {
      return function (p) {
          return function (sep) {
              return Data_List.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_16))(Text_Parsing_Parser.lazyParserT)(Prelude.bind(Text_Parsing_Parser.bindParserT(__dict_Monad_16))(p)(function (_79) {
                  return Prelude.bind(Text_Parsing_Parser.bindParserT(__dict_Monad_16))(sep)(function () {
                      return Prelude["return"](Text_Parsing_Parser.applicativeParserT(__dict_Monad_16))(_79);
                  });
              }));
          };
      };
  };
  exports["endBy"] = endBy;
  exports["sepBy1"] = sepBy1;
  exports["sepBy"] = sepBy;
  exports["try"] = $$try;;
 
})(PS["Text.Parsing.Parser.Combinators"] = PS["Text.Parsing.Parser.Combinators"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Data_String = PS["Data.String"];
  var Text_Parsing_Parser_Pos = PS["Text.Parsing.Parser.Pos"];
  var Data_Char = PS["Data.Char"];
  var Text_Parsing_Parser_Combinators = PS["Text.Parsing.Parser.Combinators"];
  var Data_Array = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Either = PS["Data.Either"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_List = PS["Data.List"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Error = PS["Control.Monad.Error"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];     
  var string = function (__dict_Monad_0) {
      return function (str) {
          return Text_Parsing_Parser.ParserT(function (_729) {
              return Prelude["return"](__dict_Monad_0["__superclass_Prelude.Applicative_0"]())((function () {
                  var _826 = Data_String.indexOf(str)(_729.value0.input);
                  if (_826 instanceof Data_Maybe.Just && _826.value0 === 0) {
                      return {
                          consumed: true, 
                          input: Data_String.drop(Data_String.length(str))(_729.value0.input), 
                          result: new Data_Either.Right(str), 
                          position: Text_Parsing_Parser_Pos.updatePosString(_729.value0.position)(str)
                      };
                  };
                  return Text_Parsing_Parser.parseFailed(_729.value0.input)(_729.value0.position)("Expected " + str);
              })());
          });
      };
  };
  var anyChar = function (__dict_Monad_2) {
      return Text_Parsing_Parser.ParserT(function (_730) {
          return Prelude["return"](__dict_Monad_2["__superclass_Prelude.Applicative_0"]())((function () {
              var _837 = Data_String.charAt(0)(_730.value0.input);
              if (_837 instanceof Data_Maybe.Nothing) {
                  return Text_Parsing_Parser.parseFailed(_730.value0.input)(_730.value0.position)("Unexpected EOF");
              };
              if (_837 instanceof Data_Maybe.Just) {
                  return {
                      consumed: true, 
                      input: Data_String.drop(1)(_730.value0.input), 
                      result: new Data_Either.Right(_837.value0), 
                      position: Text_Parsing_Parser_Pos.updatePosString(_730.value0.position)(Data_Char.toString(_837.value0))
                  };
              };
              throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-parsing/src/Text/Parsing/Parser/String.purs line 41, column 1 - line 42, column 1: " + [ _837.constructor.name ]);
          })());
      });
  };
  var satisfy = function (__dict_Monad_3) {
      return function (f) {
          return Text_Parsing_Parser_Combinators["try"](((__dict_Monad_3["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude.bind(Text_Parsing_Parser.bindParserT(__dict_Monad_3))(anyChar(__dict_Monad_3))(function (_104) {
              var _843 = f(_104);
              if (_843) {
                  return Prelude["return"](Text_Parsing_Parser.applicativeParserT(__dict_Monad_3))(_104);
              };
              if (!_843) {
                  return Text_Parsing_Parser.fail(__dict_Monad_3)("Character did not satisfy predicate");
              };
              throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-parsing/src/Text/Parsing/Parser/String.purs line 48, column 1 - line 49, column 1: " + [ _843.constructor.name ]);
          }));
      };
  };
  var $$char = function (__dict_Monad_4) {
      return function (c) {
          return satisfy(__dict_Monad_4)(function (_15) {
              return Prelude["=="](Prelude.eqChar)(_15)(c);
          });
      };
  };
  var noneOf = function (__dict_Monad_5) {
      return function (ss) {
          return satisfy(__dict_Monad_5)(Prelude.flip(Data_Foldable.notElem(Data_Foldable.foldableArray)(Prelude.eqChar))(ss));
      };
  };
  var oneOf = function (__dict_Monad_6) {
      return function (ss) {
          return satisfy(__dict_Monad_6)(Prelude.flip(Data_Foldable.elem(Data_Foldable.foldableArray)(Prelude.eqChar))(ss));
      };
  };
  var whiteSpace = function (__dict_Monad_7) {
      return Prelude.bind(Text_Parsing_Parser.bindParserT(__dict_Monad_7))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_7))(Text_Parsing_Parser.lazyParserT)(satisfy(__dict_Monad_7)(function (c) {
          return Prelude["||"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqChar)(c)("\n"))(Prelude["||"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqChar)(c)("\r"))(Prelude["||"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqChar)(c)(" "))(Prelude["=="](Prelude.eqChar)(c)("\t"))));
      })))(function (_105) {
          return Prelude["return"](Text_Parsing_Parser.applicativeParserT(__dict_Monad_7))(Data_String.fromCharArray(_105));
      });
  };
  exports["noneOf"] = noneOf;
  exports["oneOf"] = oneOf;
  exports["whiteSpace"] = whiteSpace;
  exports["char"] = $$char;
  exports["satisfy"] = satisfy;
  exports["anyChar"] = anyChar;
  exports["string"] = string;;
 
})(PS["Text.Parsing.Parser.String"] = PS["Text.Parsing.Parser.String"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_List = PS["Data.List"];
  var Text_Parsing_Parser_Combinators = PS["Text.Parsing.Parser.Combinators"];
  var Text_Parsing_Parser_String = PS["Text.Parsing.Parser.String"];
  var Data_String = PS["Data.String"];
  var Control_Alt = PS["Control.Alt"];
  var SandScript_Util = PS["SandScript.Util"];
  var Control_Lazy = PS["Control.Lazy"];
  var Text_Parsing_Parser = PS["Text.Parsing.Parser"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Error = PS["Control.Monad.Error"];
  var Text_Parsing_Parser_Expr = PS["Text.Parsing.Parser.Expr"];
  var Text_Parsing_Parser_Token = PS["Text.Parsing.Parser.Token"];
  var SandScript_Types = PS["SandScript.Types"];
  var Data_Unfoldable = PS["Data.Unfoldable"];     
  var symbol = Text_Parsing_Parser_String.oneOf(Data_Identity.monadIdentity)(Data_String.toCharArray("!#$%&|*+-/:<=>?@^_~"));
  var readOrThrow = function (parser) {
      return function (input) {
          var _827 = Text_Parsing_Parser.runParser(input)(parser);
          if (_827 instanceof Data_Either.Left) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.Parserr(_827.value0));
          };
          if (_827 instanceof Data_Either.Right) {
              return Prelude["return"](Data_Either.applicativeEither)(_827.value0);
          };
          throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Parser.purs line 105, column 1 - line 106, column 1: " + [ _827.constructor.name ]);
      };
  };
  var parseQuoted = function (pars) {
      return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Data_Identity.monadIdentity)("'"))(function () {
          return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(pars)(function (_117) {
              return Prelude["return"](Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(new SandScript_Types.List([ new SandScript_Types.Atom("quote"), _117 ]));
          });
      });
  };
  var parseList = function (pars) {
      return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.sepBy(Data_Identity.monadIdentity)(pars)(Text_Parsing_Parser_String.whiteSpace(Data_Identity.monadIdentity)))(function (_114) {
          return Prelude["return"](Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(new SandScript_Types.List(Data_List.fromList(Data_Unfoldable.unfoldableArray)(_114)));
      });
  };
  var parseDottedList = function (pars) {
      return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators.endBy(Data_Identity.monadIdentity)(pars)(Text_Parsing_Parser_String.whiteSpace(Data_Identity.monadIdentity)))(function (_116) {
          return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(SandScript_Util[">>"](Text_Parsing_Parser.monadParserT(Data_Identity.monadIdentity))(SandScript_Util[">>"](Text_Parsing_Parser.monadParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Data_Identity.monadIdentity)("."))(Text_Parsing_Parser_String.whiteSpace(Data_Identity.monadIdentity)))(pars))(function (_115) {
              return Prelude["return"](Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(new SandScript_Types.DottedList(Data_List.fromList(Data_Unfoldable.unfoldableArray)(_116), _115));
          });
      });
  };
  var many1 = function (par) {
      return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(par)(function (_108) {
          return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(par))(function (_107) {
              return Prelude["return"](Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(Data_Array[":"](_108)(_107));
          });
      });
  };
  var letter = Text_Parsing_Parser_String.oneOf(Data_Identity.monadIdentity)(Data_String.toCharArray("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"));
  var escapedChars = Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String["char"](Data_Identity.monadIdentity)("\\"))(function () {
      return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.oneOf(Data_Identity.monadIdentity)([ "\\", "\"", "\n", "\r", "\t" ]))(function (_109) {
          return Prelude["return"](Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(_109);
      });
  });
  var parseString = Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String["char"](Data_Identity.monadIdentity)("\""))(function () {
      return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.noneOf(Data_Identity.monadIdentity)([ "\"", "\\" ]))(escapedChars)))(function (_110) {
          return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String["char"](Data_Identity.monadIdentity)("\""))(function () {
              return Prelude["return"](Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(new SandScript_Types["String"](Data_String.fromCharArray(_110)));
          });
      });
  });
  var endByArr = function (x) {
      return function (s) {
          return Prelude["<$>"](Text_Parsing_Parser.functorParserT(Data_Identity.functorIdentity))(Data_List.fromList(Data_Unfoldable.unfoldableArray))(Text_Parsing_Parser_Combinators.endBy(Data_Identity.monadIdentity)(x)(s));
      };
  };
  var digit = Text_Parsing_Parser_String.oneOf(Data_Identity.monadIdentity)(Data_String.toCharArray("0123456789"));
  var parseAtom = Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(letter)(symbol))(function (_112) {
      return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Data_Array.many(Text_Parsing_Parser.alternativeParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser.lazyParserT)(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(letter)(symbol))(digit)))(function (_111) {
          var atom = Data_String.fromCharArray(Data_Array[":"](_112)(_111));
          return Prelude["return"](Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))((function () {
              if (atom === "true") {
                  return new SandScript_Types.Bool(true);
              };
              if (atom === "false") {
                  return new SandScript_Types.Bool(false);
              };
              return new SandScript_Types.Atom(atom);
          })());
      });
  });
  var parseNumber = Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(many1(digit))(function (_113) {
      return Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["return"](Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity)))(Prelude["<<<"](Prelude.semigroupoidFn)((SandScript_Types["Number"]).create)(SandScript_Util.str2num))(Data_String.fromCharArray(_113));
  });
  var parseExpr = Control_Lazy.fix(Text_Parsing_Parser.lazyParserT)(function (p) {
      return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(parseString)(parseAtom))(parseNumber))(parseQuoted(p)))(Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Data_Identity.monadIdentity)("("))(function () {
          return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_Combinators["try"](Data_Identity.functorIdentity)(parseList(p)))(parseDottedList(p)))(function (_118) {
              return Prelude.bind(Text_Parsing_Parser.bindParserT(Data_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Data_Identity.monadIdentity)(")"))(function () {
                  return Prelude["return"](Text_Parsing_Parser.applicativeParserT(Data_Identity.monadIdentity))(_118);
              });
          });
      }));
  });
  var readExpr = readOrThrow(parseExpr);
  var readExprList = readOrThrow(endByArr(parseExpr)(Text_Parsing_Parser_String.whiteSpace(Data_Identity.monadIdentity)));
  exports["readExprList"] = readExprList;
  exports["readExpr"] = readExpr;
  exports["readOrThrow"] = readOrThrow;
  exports["parseExpr"] = parseExpr;
  exports["parseQuoted"] = parseQuoted;
  exports["parseDottedList"] = parseDottedList;
  exports["parseList"] = parseList;
  exports["parseNumber"] = parseNumber;
  exports["parseAtom"] = parseAtom;
  exports["parseString"] = parseString;
  exports["escapedChars"] = escapedChars;
  exports["letter"] = letter;
  exports["digit"] = digit;
  exports["symbol"] = symbol;
  exports["endByArr"] = endByArr;
  exports["many1"] = many1;;
 
})(PS["SandScript.Parser"] = PS["SandScript.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Data_Traversable = PS["Data.Traversable"];
  var SandScript_Util = PS["SandScript.Util"];
  var Data_Array = PS["Data.Array"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_String = PS["Data.String"];
  var Data_Maybe = PS["Data.Maybe"];
  var SandScript_Types = PS["SandScript.Types"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Data_Array_Unsafe = PS["Data.Array.Unsafe"];     
  var unpackStr = function (_702) {
      if (_702 instanceof SandScript_Types["String"]) {
          return Prelude["return"](Data_Either.applicativeEither)(_702.value0);
      };
      if (_702 instanceof SandScript_Types["Number"]) {
          return Prelude["return"](Data_Either.applicativeEither)(Prelude.show(Prelude.showInt)(_702.value0));
      };
      if (_702 instanceof SandScript_Types.Bool) {
          return Prelude["return"](Data_Either.applicativeEither)(Prelude.show(Prelude.showBoolean)(_702.value0));
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("string", _702));
  };
  var unpackNum = function (__copy__701) {
      var _701 = __copy__701;
      tco: while (true) {
          if (_701 instanceof SandScript_Types["Number"]) {
              return Prelude["return"](Data_Either.applicativeEither)(_701.value0);
          };
          if (_701 instanceof SandScript_Types["String"]) {
              var _827 = SandScript_Util.readNum(_701.value0);
              if (_827 instanceof Data_Maybe.Just) {
                  return Prelude["return"](Data_Either.applicativeEither)(_827.value0);
              };
              if (_827 instanceof Data_Maybe.Nothing) {
                  return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(SandScript_Types.TypeMismatch.create("number")(new SandScript_Types["String"](_701.value0)));
              };
              throw new Error("Failed pattern match: " + [ _827.constructor.name ]);
          };
          if (_701 instanceof SandScript_Types.List && _701.value0.length === 1) {
              var __tco__701 = _701.value0[0];
              _701 = __tco__701;
              continue tco;
          };
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("number", _701));
      };
  };
  var unpackBool = function (_703) {
      if (_703 instanceof SandScript_Types.Bool) {
          return Prelude["return"](Data_Either.applicativeEither)(_703.value0);
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("bool", _703));
  };
  var symbolChecker = function (_704) {
      if (_704.length === 1 && _704[0] instanceof SandScript_Types.Atom) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Bool(true));
      };
      return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Bool(false));
  };
  var sym2str = function (_708) {
      if (_708.length === 1 && _708[0] instanceof SandScript_Types.Atom) {
          return Prelude["return"](Data_Either.applicativeEither)((SandScript_Types["String"]).create(Prelude.show(Prelude.showString)((_708[0]).value0)));
      };
      if (_708.length === 1) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("symbol", _708[0]));
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(1, _708));
  };
  var substr = function (_717) {
      if (_717.length === 3 && (_717[0] instanceof SandScript_Types["String"] && (_717[1] instanceof SandScript_Types["Number"] && _717[2] instanceof SandScript_Types["Number"]))) {
          if (Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["<="](Prelude.ordInt)(0)((_717[1]).value0))(Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["<="](Prelude.ordInt)((_717[1]).value0)((_717[2]).value0))(Prelude["<="](Prelude.ordInt)((_717[2]).value0)(Data_String.length((_717[0]).value0))))) {
              return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types["String"](Data_String.drop((_717[1]).value0)(Data_String.take((_717[2]).value0)((_717[0]).value0))));
          };
          if (Prelude.otherwise) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("indices between 0 and " + Prelude.show(Prelude.showInt)(Data_String.length((_717[0]).value0)), new SandScript_Types.List([ _717[1], _717[2] ])));
          };
      };
      if (_717.length === 3 && (_717[1] instanceof SandScript_Types["Number"] && _717[2] instanceof SandScript_Types["Number"])) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("string", _717[0]));
      };
      if (_717.length === 3 && _717[2] instanceof SandScript_Types["Number"]) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("number", _717[1]));
      };
      if (_717.length === 3) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("number", _717[2]));
      };
      if (_717.length === 3) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(SandScript_Types.BadSpecialForm.create("Incorrect `substring` syntax")(new SandScript_Types.List([ _717[0], _717[1], _717[2] ])));
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(3, _717));
  };
  var stringChecker = function (_705) {
      if (_705.length === 1 && _705[0] instanceof SandScript_Types["String"]) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Bool(true));
      };
      return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Bool(false));
  };
  var strRef = function (_716) {
      if (_716.length === 2 && (_716[0] instanceof SandScript_Types["String"] && _716[1] instanceof SandScript_Types["Number"])) {
          var _867 = Data_String.charAt((_716[1]).value0)((_716[0]).value0);
          if (_867 instanceof Data_Maybe.Just) {
              return Prelude["return"](Data_Either.applicativeEither)((SandScript_Types["String"]).create(Data_String.singleton(_867.value0)));
          };
          if (_867 instanceof Data_Maybe.Nothing) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("index smaller than " + Prelude.show(Prelude.showInt)(Data_String.length((_716[0]).value0)), _716[1]));
          };
          throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval/Primitives.purs line 184, column 1 - line 185, column 1: " + [ _867.constructor.name ]);
      };
      if (_716.length === 2 && _716[1] instanceof SandScript_Types["Number"]) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("string", _716[0]));
      };
      if (_716.length === 2 && _716[0] instanceof SandScript_Types["String"]) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("number", _716[1]));
      };
      if (_716.length === 2) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(SandScript_Types.BadSpecialForm.create("Incorrect `string-ref` syntax")(new SandScript_Types.List([ _716[0], _716[1] ])));
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(2, _716));
  };
  var strLength = function (_715) {
      if (_715.length === 1 && _715[0] instanceof SandScript_Types["String"]) {
          return Prelude["return"](Data_Either.applicativeEither)((SandScript_Types["Number"]).create(Data_String.length((_715[0]).value0)));
      };
      if (_715.length === 1) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("string", _715[0]));
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(1, _715));
  };
  var strAppend = function (_718) {
      if (_718.length === 0) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(1, [  ]));
      };
      if (Data_Maybe.isJust(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(SandScript_Types.fromString)(_718))) {
          return Prelude["return"](Data_Either.applicativeEither)((SandScript_Types["String"]).create(Data_Foldable.foldl(Data_Foldable.foldableArray)(function (acc) {
              return function (_699) {
                  if (_699 instanceof SandScript_Types["String"]) {
                      return acc + _699.value0;
                  };
                  throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval/Primitives.purs line 203, column 1 - line 204, column 1: " + [ _699.constructor.name ]);
              };
          })("")(_718)));
      };
      if (Prelude.otherwise) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(SandScript_Types.TypeMismatch.create("list of strings")(new SandScript_Types.List(_718)));
      };
      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval/Primitives.purs line 203, column 1 - line 204, column 1: " + [ _718.constructor.name ]);
  };
  var str2sym = function (_709) {
      if (_709.length === 1 && _709[0] instanceof SandScript_Types["String"]) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Atom((_709[0]).value0));
      };
      if (_709.length === 1) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("string", _709[0]));
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(1, _709));
  };
  var str2list = function (_719) {
      if (_719.length === 1 && _719[0] instanceof SandScript_Types["String"]) {
          return Prelude["return"](Data_Either.applicativeEither)(Prelude["<<<"](Prelude.semigroupoidFn)(SandScript_Types.List.create)(Prelude.map(Prelude.functorArray)((SandScript_Types["String"]).create))(SandScript_Util.toChars((_719[0]).value0)));
      };
      if (_719.length === 1) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("string", _719[0]));
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(1, _719));
  };
  var numericBinop = function (op) {
      return function (_700) {
          if (_700.length === 0) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(2, [  ]));
          };
          if (_700.length === 1) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(2, _700));
          };
          return Prelude[">>="](Data_Either.bindEither)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(unpackNum)(_700))(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["return"](Data_Either.applicativeEither))(Prelude["<<<"](Prelude.semigroupoidFn)((SandScript_Types["Number"]).create)(SandScript_Util.foldl1(op))));
      };
  };
  var numberChecker = function (_706) {
      if (_706.length === 1 && _706[0] instanceof SandScript_Types["Number"]) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Bool(true));
      };
      return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Bool(false));
  };
  var makeStr = function (_714) {
      if (_714.length === 2 && (_714[0] instanceof SandScript_Types["Number"] && _714[1] instanceof SandScript_Types["String"])) {
          var _903 = Data_String.toChar((_714[1]).value0);
          if (_903 instanceof Data_Maybe.Just) {
              return Prelude["return"](Data_Either.applicativeEither)(Prelude["<<<"](Prelude.semigroupoidFn)((SandScript_Types["String"]).create)(Data_String.fromCharArray)(Data_Array.replicate((_714[0]).value0)(_903.value0)));
          };
          if (_903 instanceof Data_Maybe.Nothing) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.BadSpecialForm("Expected singleton string, found", new SandScript_Types["String"]((_714[1]).value0)));
          };
          throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval/Primitives.purs line 170, column 1 - line 171, column 1: " + [ _903.constructor.name ]);
      };
      if (_714.length === 2 && _714[1] instanceof SandScript_Types["String"]) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("number", _714[0]));
      };
      if (_714.length === 2 && _714[0] instanceof SandScript_Types["Number"]) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("string", _714[1]));
      };
      if (_714.length === 2) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(SandScript_Types.BadSpecialForm.create("Incorrect `make-string` syntax")(new SandScript_Types.List([ _714[0], _714[1] ])));
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(2, _714));
  };
  var list2str = function (_720) {
      if (_720.length === 1 && _720[0] instanceof SandScript_Types.List) {
          return strAppend((_720[0]).value0);
      };
      if (_720.length === 1) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("list", _720[0]));
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(1, _720));
  };
  var eqv = function (_713) {
      if (_713.length === 2 && (_713[0] instanceof SandScript_Types.Bool && _713[1] instanceof SandScript_Types.Bool)) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Bool(Prelude["=="](Prelude.eqBoolean)((_713[0]).value0)((_713[1]).value0)));
      };
      if (_713.length === 2 && (_713[0] instanceof SandScript_Types["Number"] && _713[1] instanceof SandScript_Types["Number"])) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Bool(Prelude["=="](Prelude.eqInt)((_713[0]).value0)((_713[1]).value0)));
      };
      if (_713.length === 2 && (_713[0] instanceof SandScript_Types["String"] && _713[1] instanceof SandScript_Types["String"])) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Bool(Prelude["=="](Prelude.eqString)((_713[0]).value0)((_713[1]).value0)));
      };
      if (_713.length === 2 && (_713[0] instanceof SandScript_Types.Atom && _713[1] instanceof SandScript_Types.Atom)) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Bool(Prelude["=="](Prelude.eqString)((_713[0]).value0)((_713[1]).value0)));
      };
      if (_713.length === 2 && (_713[0] instanceof SandScript_Types.DottedList && _713[1] instanceof SandScript_Types.DottedList)) {
          return eqv([ SandScript_Types.List.create(Prelude["++"](Prelude.semigroupArray)((_713[0]).value0)([ (_713[0]).value1 ])), SandScript_Types.List.create(Prelude["++"](Prelude.semigroupArray)((_713[1]).value0)([ (_713[1]).value1 ])) ]);
      };
      if (_713.length === 2 && (_713[0] instanceof SandScript_Types.List && _713[1] instanceof SandScript_Types.List)) {
          var eqPair = function (_721) {
              var _945 = eqv([ _721.value0, _721.value1 ]);
              if (_945 instanceof Data_Either.Left) {
                  return false;
              };
              if (_945 instanceof Data_Either.Right && _945.value0 instanceof SandScript_Types.Bool) {
                  return _945.value0.value0;
              };
              throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval/Primitives.purs line 162, column 3 - line 163, column 3: " + [ _945.constructor.name ]);
          };
          return Prelude["return"](Data_Either.applicativeEither)(SandScript_Types.Bool.create(Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["=="](Prelude.eqInt)(Data_Array.length((_713[0]).value0))(Data_Array.length((_713[1]).value0)))(Data_Foldable.all(Data_Foldable.foldableArray)(Prelude.booleanAlgebraBoolean)(eqPair)(Data_Array.zip((_713[0]).value0)((_713[1]).value0)))));
      };
      if (_713.length === 2) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Bool(false));
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(2, _713));
  };
  var cons = function (_712) {
      if (_712.length === 2 && (_712[1] instanceof SandScript_Types.List && (_712[1]).value0.length === 0)) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.List([ _712[0] ]));
      };
      if (_712.length === 2 && _712[1] instanceof SandScript_Types.List) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.List(Data_Array[":"](_712[0])((_712[1]).value0)));
      };
      if (_712.length === 2 && _712[1] instanceof SandScript_Types.DottedList) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.DottedList(Data_Array[":"](_712[0])((_712[1]).value0), (_712[1]).value1));
      };
      if (_712.length === 2) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.DottedList([ _712[0] ], _712[1]));
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(2, _712));
  };
  var cdr = function (_711) {
      if (_711.length === 1 && _711[0] instanceof SandScript_Types.List) {
          var _971 = Data_Array.tail((_711[0]).value0);
          if (_971 instanceof Data_Maybe.Just) {
              return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.List(_971.value0));
          };
          if (_971 instanceof Data_Maybe.Nothing) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(1, [  ]));
          };
          throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval/Primitives.purs line 137, column 1 - line 138, column 1: " + [ _971.constructor.name ]);
      };
      if (_711.length === 1 && _711[0] instanceof SandScript_Types.DottedList) {
          var _975 = Data_Array.tail((_711[0]).value0);
          if (_975 instanceof Data_Maybe.Just && _975.value0.length === 1) {
              return Prelude["return"](Data_Either.applicativeEither)((_711[0]).value1);
          };
          if (_975 instanceof Data_Maybe.Just) {
              return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.DottedList(_975.value0, (_711[0]).value1));
          };
          if (_975 instanceof Data_Maybe.Nothing) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(1, [  ]));
          };
          throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval/Primitives.purs line 137, column 1 - line 138, column 1: " + [ _975.constructor.name ]);
      };
      if (_711.length === 1) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("pair", _711[0]));
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(1, _711));
  };
  var car = function (_710) {
      if (_710.length === 1 && _710[0] instanceof SandScript_Types.List) {
          var _984 = Data_Array.head((_710[0]).value0);
          if (_984 instanceof Data_Maybe.Just) {
              return Prelude["return"](Data_Either.applicativeEither)(_984.value0);
          };
          if (_984 instanceof Data_Maybe.Nothing) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(1, [  ]));
          };
          throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval/Primitives.purs line 127, column 1 - line 128, column 1: " + [ _984.constructor.name ]);
      };
      if (_710.length === 1 && _710[0] instanceof SandScript_Types.DottedList) {
          var _988 = Data_Array.head((_710[0]).value0);
          if (_988 instanceof Data_Maybe.Just) {
              return Prelude["return"](Data_Either.applicativeEither)(_988.value0);
          };
          if (_988 instanceof Data_Maybe.Nothing) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(1, [  ]));
          };
          throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval/Primitives.purs line 127, column 1 - line 128, column 1: " + [ _988.constructor.name ]);
      };
      if (_710.length === 1) {
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.TypeMismatch("pair", _710[0]));
      };
      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(1, _710));
  };
  var boolChecker = function (_707) {
      if (_707.length === 1 && _707[0] instanceof SandScript_Types.Bool) {
          return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Bool(true));
      };
      return Prelude["return"](Data_Either.applicativeEither)(new SandScript_Types.Bool(false));
  };
  var boolBinop = function (unpacker) {
      return function (op) {
          return function (args) {
              var _997 = Prelude["/="](Prelude.eqInt)(Data_Array.length(args))(2);
              if (_997) {
                  return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorEither)(new SandScript_Types.NumArgs(2, args));
              };
              if (!_997) {
                  return Prelude.bind(Data_Either.bindEither)(unpacker(args[0]))(function (_66) {
                      return Prelude.bind(Data_Either.bindEither)(unpacker(args[1]))(function (_65) {
                          return Prelude["return"](Data_Either.applicativeEither)(SandScript_Types.Bool.create(op(_66)(_65)));
                      });
                  });
              };
              throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval/Primitives.purs line 70, column 1 - line 71, column 1: " + [ _997.constructor.name ]);
          };
      };
  };
  var boolBoolBinop = boolBinop(unpackBool);
  var numBoolBinop = boolBinop(unpackNum);
  var strBoolBinop = boolBinop(unpackStr);
  var primitives = [ new Data_Tuple.Tuple("+", numericBinop(Prelude["+"](Prelude.semiringInt))), new Data_Tuple.Tuple("-", numericBinop(Prelude["-"](Prelude.ringInt))), new Data_Tuple.Tuple("*", numericBinop(Prelude["*"](Prelude.semiringInt))), new Data_Tuple.Tuple("/", numericBinop(Prelude["/"](Prelude.moduloSemiringInt))), new Data_Tuple.Tuple("mod", numericBinop(Prelude.mod(Prelude.moduloSemiringInt))), new Data_Tuple.Tuple("symbol?", symbolChecker), new Data_Tuple.Tuple("string?", stringChecker), new Data_Tuple.Tuple("number?", numberChecker), new Data_Tuple.Tuple("bool?", boolChecker), new Data_Tuple.Tuple("=", numBoolBinop(Prelude["=="](Prelude.eqInt))), new Data_Tuple.Tuple("<", numBoolBinop(Prelude["<"](Prelude.ordInt))), new Data_Tuple.Tuple(">", numBoolBinop(Prelude[">"](Prelude.ordInt))), new Data_Tuple.Tuple("!=", numBoolBinop(Prelude["/="](Prelude.eqInt))), new Data_Tuple.Tuple(">=", numBoolBinop(Prelude[">="](Prelude.ordInt))), new Data_Tuple.Tuple("<=", numBoolBinop(Prelude["<="](Prelude.ordInt))), new Data_Tuple.Tuple("&&", boolBoolBinop(Prelude["&&"](Prelude.booleanAlgebraBoolean))), new Data_Tuple.Tuple("||", boolBoolBinop(Prelude["||"](Prelude.booleanAlgebraBoolean))), new Data_Tuple.Tuple("string=?", strBoolBinop(Prelude["=="](Prelude.eqString))), new Data_Tuple.Tuple("string<?", strBoolBinop(Prelude["<"](Prelude.ordString))), new Data_Tuple.Tuple("string>?", strBoolBinop(Prelude[">"](Prelude.ordString))), new Data_Tuple.Tuple("string>=?", strBoolBinop(Prelude[">="](Prelude.ordString))), new Data_Tuple.Tuple("string<=?", strBoolBinop(Prelude["<="](Prelude.ordString))), new Data_Tuple.Tuple("make-string", makeStr), new Data_Tuple.Tuple("string-length", strLength), new Data_Tuple.Tuple("string-ref", strRef), new Data_Tuple.Tuple("substring", substr), new Data_Tuple.Tuple("string-append", strAppend), new Data_Tuple.Tuple("string->list", str2list), new Data_Tuple.Tuple("list->string", list2str), new Data_Tuple.Tuple("car", car), new Data_Tuple.Tuple("head", car), new Data_Tuple.Tuple("cdr", cdr), new Data_Tuple.Tuple("tail", cdr), new Data_Tuple.Tuple("cons", cons), new Data_Tuple.Tuple("eq?", eqv), new Data_Tuple.Tuple("eqv?", eqv), new Data_Tuple.Tuple("symbol->string", sym2str), new Data_Tuple.Tuple("string->symbol", str2sym) ];
  exports["list2str"] = list2str;
  exports["str2list"] = str2list;
  exports["strAppend"] = strAppend;
  exports["substr"] = substr;
  exports["strRef"] = strRef;
  exports["strLength"] = strLength;
  exports["makeStr"] = makeStr;
  exports["eqv"] = eqv;
  exports["cons"] = cons;
  exports["cdr"] = cdr;
  exports["car"] = car;
  exports["str2sym"] = str2sym;
  exports["sym2str"] = sym2str;
  exports["boolChecker"] = boolChecker;
  exports["numberChecker"] = numberChecker;
  exports["stringChecker"] = stringChecker;
  exports["symbolChecker"] = symbolChecker;
  exports["strBoolBinop"] = strBoolBinop;
  exports["boolBoolBinop"] = boolBoolBinop;
  exports["numBoolBinop"] = numBoolBinop;
  exports["unpackBool"] = unpackBool;
  exports["unpackStr"] = unpackStr;
  exports["unpackNum"] = unpackNum;
  exports["boolBinop"] = boolBinop;
  exports["numericBinop"] = numericBinop;
  exports["primitives"] = primitives;;
 
})(PS["SandScript.Eval.Primitives"] = PS["SandScript.Eval.Primitives"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var SandScript_Util = PS["SandScript.Util"];
  var Data_Array = PS["Data.Array"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Error_Trans = PS["Control.Monad.Error.Trans"];
  var SandScript_Types = PS["SandScript.Types"];
  var SandScript_Eval_Primitives = PS["SandScript.Eval.Primitives"];
  var Data_Foldable = PS["Data.Foldable"];     
  var setVar = function (envRef) {
      return function ($$var) {
          return function (value) {
              return Prelude.bind(Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff))(Control_Monad_Eff_Ref.readRef(envRef)))(function (_68) {
                  return Prelude.bind(Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorErrorT(Control_Monad_Eff.monadEff))(new SandScript_Types.UnboundedVar("Setting an unbound variable", $$var)))(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff)))(Prelude.flip(Control_Monad_Eff_Ref.writeRef)(value)))(Data_Tuple.lookup(Data_Foldable.foldableArray)(Prelude.eqString)($$var)(_68)))(function () {
                      return Prelude["return"](Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))(value);
                  });
              });
          };
      };
  };
  var nullEnv = Control_Monad_Eff_Ref.newRef([  ]);
  var isBound = function (envRef) {
      return function ($$var) {
          return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.readRef(envRef))(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude["return"](Control_Monad_Eff.applicativeEff))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.maybe(false)(Prelude["const"](true)))(Data_Tuple.lookup(Data_Foldable.foldableArray)(Prelude.eqString)($$var))));
      };
  };
  var getVar = function (envRef) {
      return function ($$var) {
          return Prelude.bind(Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff))(Control_Monad_Eff_Ref.readRef(envRef)))(function (_67) {
              return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorErrorT(Control_Monad_Eff.monadEff))(new SandScript_Types.UnboundedVar("Getting an unbound variable", $$var)))(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff)))(Control_Monad_Eff_Ref.readRef))(Data_Tuple.lookup(Data_Foldable.foldableArray)(Prelude.eqString)($$var)(_67));
          });
      };
  };
  var defineVar = function (envRef) {
      return function ($$var) {
          return function (value) {
              return Prelude.bind(Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff))(isBound(envRef)($$var)))(function (_71) {
                  if (_71) {
                      return SandScript_Util[">>"](Control_Monad_Error_Trans.monadErrorT(Control_Monad_Eff.monadEff))(setVar(envRef)($$var)(value))(Prelude["return"](Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))(value));
                  };
                  if (!_71) {
                      return Prelude.bind(Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff))(Control_Monad_Eff_Ref.newRef(value)))(function (_70) {
                          return Prelude.bind(Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff))(Control_Monad_Eff_Ref.readRef(envRef)))(function (_69) {
                              return Prelude.bind(Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff))(Control_Monad_Eff_Ref.writeRef(envRef)(Data_Array[":"](new Data_Tuple.Tuple($$var, _70))(_69))))(function () {
                                  return Prelude["return"](Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))(value);
                              });
                          });
                      });
                  };
                  throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Variables.purs line 41, column 1 - line 42, column 1: " + [ _71.constructor.name ]);
              });
          };
      };
  };
  var bindVars = function (envRef) {
      return function (bindings) {
          var addBindings = function (_722) {
              return function __do() {
                  var _72 = Control_Monad_Eff_Ref.newRef(_722.value1)();
                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(new Data_Tuple.Tuple(_722.value0, _72))();
              };
          };
          var extendEnv = function (bindings_1) {
              return function (env) {
                  return Prelude.map(Control_Monad_Eff.functorEff)(function (_14) {
                      return Prelude["++"](Prelude.semigroupArray)(_14)(env);
                  })(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(addBindings)(bindings_1));
              };
          };
          return Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.readRef(envRef))(extendEnv(bindings)))(Control_Monad_Eff_Ref.newRef);
      };
  };
  exports["bindVars"] = bindVars;
  exports["defineVar"] = defineVar;
  exports["setVar"] = setVar;
  exports["getVar"] = getVar;
  exports["isBound"] = isBound;
  exports["nullEnv"] = nullEnv;;
 
})(PS["SandScript.Variables"] = PS["SandScript.Variables"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var SandScript_Variables = PS["SandScript.Variables"];
  var Data_Array_Unsafe = PS["Data.Array.Unsafe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Array = PS["Data.Array"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var SandScript_Errors = PS["SandScript.Errors"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Data_Maybe = PS["Data.Maybe"];
  var SandScript_Util = PS["SandScript.Util"];
  var Node_FS_Sync = PS["Node.FS.Sync"];
  var Node_Buffer = PS["Node.Buffer"];
  var SandScript_Parser = PS["SandScript.Parser"];
  var SandScript_Eval_Primitives = PS["SandScript.Eval.Primitives"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Monad_Error = PS["Control.Monad.Error"];
  var Control_Bind = PS["Control.Bind"];
  var Node_FS = PS["Node.FS"];
  var Node_Encoding = PS["Node.Encoding"];
  var SandScript_Types = PS["SandScript.Types"];
  var Control_Monad_Error_Trans = PS["Control.Monad.Error.Trans"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var readContents = function (_737) {
      if (_737.length === 1 && _737[0] instanceof SandScript_Types["String"]) {
          return Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff))(Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["<<<"](Prelude.semigroupoidFn)((SandScript_Types["String"]).create)(Node_Buffer.toString(Node_Encoding.ASCII.value)))(Node_FS_Sync.readFile((_737[0]).value0)));
      };
      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval.purs line 117, column 1 - line 118, column 1: " + [ _737.constructor.name ]);
  };
  var makePort = function (flag) {
      return function (_735) {
          if (_735.length === 1 && _735[0] instanceof SandScript_Types["String"]) {
              return Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff))(Prelude["<$>"](Control_Monad_Eff.functorEff)(SandScript_Types.Port.create)(Node_FS_Sync.fdOpen((_735[0]).value0)(flag)(Data_Maybe.Nothing.value)));
          };
          throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval.purs line 110, column 1 - line 111, column 1: " + [ flag.constructor.name, _735.constructor.name ]);
      };
  };
  var makeFunc = function (varargs) {
      return function (env) {
          return function (params) {
              return function (body) {
                  return Prelude["return"](Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))(new SandScript_Types.Func({
                      params: Prelude.map(Prelude.functorArray)(Prelude.show(SandScript_Types.showLispVal))(params), 
                      varargs: varargs, 
                      body: body, 
                      closure: env
                  }));
              };
          };
      };
  };
  var makeNormalFunc = makeFunc(Data_Maybe.Nothing.value);
  var makeVarArgs = Prelude["<<<"](Prelude.semigroupoidFn)(makeFunc)(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Maybe.Just.create)(Prelude.show(SandScript_Types.showLispVal)));
  var load = function (filename) {
      return Prelude[">>="](Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff))(Prelude["<$>"](Control_Monad_Eff.functorEff)(Node_Buffer.toString(Node_Encoding.ASCII.value))(Node_FS_Sync.readFile(filename))))(Prelude["<<<"](Prelude.semigroupoidFn)(SandScript_Errors.liftThrows)(SandScript_Parser.readExprList));
  };
  var readAll = function (_738) {
      if (_738.length === 1 && _738[0] instanceof SandScript_Types["String"]) {
          return Prelude.map(Control_Monad_Error_Trans.functorErrorT(Control_Monad_Eff.functorEff))(SandScript_Types.List.create)(load((_738[0]).value0));
      };
      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval.purs line 123, column 1 - line 124, column 1: " + [ _738.constructor.name ]);
  };
  var fapply = function (_733) {
      return function (args) {
          if (_733 instanceof SandScript_Types.PrimitiveFunc) {
              return SandScript_Errors.liftThrows(_733.value0(args));
          };
          if (_733 instanceof SandScript_Types.Func) {
              var remainingArgs = Data_Array.drop(Data_Array.length(_733.value0.params))(args);
              var evalBody = function (env) {
                  return Prelude.map(Control_Monad_Error_Trans.functorErrorT(Control_Monad_Eff.functorEff))(Data_Array_Unsafe.last)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))($$eval(env))(_733.value0.body));
              };
              var bindVarArgs = function (arg) {
                  return function (env) {
                      if (arg instanceof Data_Maybe.Just) {
                          return Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff))(SandScript_Variables.bindVars(env)([ new Data_Tuple.Tuple(arg.value0, new SandScript_Types.List(remainingArgs)) ]));
                      };
                      if (arg instanceof Data_Maybe.Nothing) {
                          return Prelude["return"](Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))(env);
                      };
                      throw new Error("Failed pattern match: " + [ arg.constructor.name ]);
                  };
              };
              var _843 = Prelude["&&"](Prelude.booleanAlgebraBoolean)(Prelude["/="](Prelude.eqInt)(Data_Array.length(_733.value0.params))(Data_Array.length(args)))(Data_Maybe.isNothing(_733.value0.varargs));
              if (_843) {
                  return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorErrorT(Control_Monad_Eff.monadEff))(new SandScript_Types.NumArgs(Data_Array.length(_733.value0.params), args));
              };
              if (!_843) {
                  return Prelude[">>="](Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(Prelude[">>="](Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff))(SandScript_Variables.bindVars(_733.value0.closure)(Data_Array.zip(_733.value0.params)(args))))(bindVarArgs(_733.value0.varargs)))(evalBody);
              };
              throw new Error("Failed pattern match: " + [ _843.constructor.name ]);
          };
          throw new Error("Failed pattern match: " + [ _733.constructor.name, args.constructor.name ]);
      };
  };
  var evalIf = function (env) {
      return function (pred) {
          return function (conseq) {
              return function (alt) {
                  return Prelude.bind(Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))($$eval(env)(pred))(function (_121) {
                      if (_121 instanceof SandScript_Types.Bool && !_121.value0) {
                          return $$eval(env)(alt);
                      };
                      if (_121 instanceof SandScript_Types.Bool && _121.value0) {
                          return $$eval(env)(conseq);
                      };
                      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorErrorT(Control_Monad_Eff.monadEff))(new SandScript_Types.TypeMismatch("bool", _121));
                  });
              };
          };
      };
  };
  var $$eval = function (env) {
      return function (_732) {
          if (_732 instanceof SandScript_Types["String"]) {
              return Prelude["return"](Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))(_732);
          };
          if (_732 instanceof SandScript_Types["Number"]) {
              return Prelude["return"](Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))(_732);
          };
          if (_732 instanceof SandScript_Types.Bool) {
              return Prelude["return"](Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))(_732);
          };
          if (_732 instanceof SandScript_Types.Atom) {
              return SandScript_Variables.getVar(env)(_732.value0);
          };
          if (_732 instanceof SandScript_Types.List && (_732.value0.length === 2 && (_732.value0[0] instanceof SandScript_Types.Atom && (_732.value0[0]).value0 === "quote"))) {
              return Prelude["return"](Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))(_732.value0[1]);
          };
          if (_732 instanceof SandScript_Types.List && (_732.value0.length === 4 && (_732.value0[0] instanceof SandScript_Types.Atom && (_732.value0[0]).value0 === "if"))) {
              return evalIf(env)(_732.value0[1])(_732.value0[2])(_732.value0[3]);
          };
          if (_732 instanceof SandScript_Types.List && (_732.value0.length === 3 && (_732.value0[0] instanceof SandScript_Types.Atom && ((_732.value0[0]).value0 === "set" && _732.value0[1] instanceof SandScript_Types.Atom)))) {
              return Prelude[">>="](Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))($$eval(env)(_732.value0[2]))(SandScript_Variables.setVar(env)((_732.value0[1]).value0));
          };
          if (_732 instanceof SandScript_Types.List && (_732.value0.length === 3 && (_732.value0[0] instanceof SandScript_Types.Atom && ((_732.value0[0]).value0 === "def" && _732.value0[1] instanceof SandScript_Types.Atom)))) {
              return Prelude[">>="](Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))($$eval(env)(_732.value0[2]))(SandScript_Variables.defineVar(env)((_732.value0[1]).value0));
          };
          if (_732 instanceof SandScript_Types.List && (_732.value0.length === 2 && (_732.value0[0] instanceof SandScript_Types.Atom && ((_732.value0[0]).value0 === "load" && _732.value0[1] instanceof SandScript_Types["String"])))) {
              return Prelude[">>="](Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(load((_732.value0[1]).value0))(Prelude["<<<"](Prelude.semigroupoidFn)(Prelude.map(Control_Monad_Error_Trans.functorErrorT(Control_Monad_Eff.functorEff))(Data_Array_Unsafe.last))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))($$eval(env))));
          };
          if (_732 instanceof SandScript_Types.List) {
              if (Prelude["=="](Data_Maybe.eqMaybe(SandScript_Types.eqLispVal))(Data_Array["!!"](_732.value0)(0))(new Data_Maybe.Just(new SandScript_Types.Atom("def")))) {
                  var _886 = Data_Array.uncons(Data_Array.drop(1)(_732.value0));
                  if (_886 instanceof Data_Maybe.Just && _886.value0.head instanceof SandScript_Types.List) {
                      var _887 = Data_Array.uncons(_886.value0.head.value0);
                      if (_887 instanceof Data_Maybe.Just && _887.value0.head instanceof SandScript_Types.Atom) {
                          return Prelude[">>="](Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(makeNormalFunc(env)(_887.value0.tail)(_886.value0.tail))(SandScript_Variables.defineVar(env)(_887.value0.head.value0));
                      };
                      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorErrorT(Control_Monad_Eff.monadEff))(new SandScript_Types.NotFunction("Did not recognize function", Prelude.show(SandScript_Types.showLispVal)(new SandScript_Types.List(_886.value0.head.value0))));
                  };
                  if (_886 instanceof Data_Maybe.Just && _886.value0.head instanceof SandScript_Types.DottedList) {
                      var _896 = Data_Array.uncons(_886.value0.head.value0);
                      if (_896 instanceof Data_Maybe.Just && _896.value0.head instanceof SandScript_Types.Atom) {
                          return Prelude[">>="](Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(makeVarArgs(_886.value0.head.value1)(env)(_896.value0.tail)(_886.value0.tail))(SandScript_Variables.defineVar(env)(_896.value0.head.value0));
                      };
                      return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorErrorT(Control_Monad_Eff.monadEff))(new SandScript_Types.NotFunction("Did not recognize function", Prelude.show(SandScript_Types.showLispVal)(new SandScript_Types.List(_886.value0.head.value0))));
                  };
                  return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorErrorT(Control_Monad_Eff.monadEff))(new SandScript_Types.NotFunction("Failed `def` parse", Prelude.show(SandScript_Types.showLispVal)(new SandScript_Types.List(_732.value0))));
              };
              if (Prelude["=="](Data_Maybe.eqMaybe(SandScript_Types.eqLispVal))(Data_Array["!!"](_732.value0)(0))(new Data_Maybe.Just(new SandScript_Types.Atom("lambda")))) {
                  var _906 = Data_Array.uncons(Data_Array.drop(1)(_732.value0));
                  if (_906 instanceof Data_Maybe.Just && _906.value0.head instanceof SandScript_Types.List) {
                      return makeNormalFunc(env)(_906.value0.head.value0)(_906.value0.tail);
                  };
                  if (_906 instanceof Data_Maybe.Just && _906.value0.head instanceof SandScript_Types.DottedList) {
                      return makeVarArgs(_906.value0.head.value1)(env)(_906.value0.head.value0)(_906.value0.tail);
                  };
                  if (_906 instanceof Data_Maybe.Just && _906.value0.head instanceof SandScript_Types.Atom) {
                      return makeVarArgs(_906.value0.head)(env)([  ])(_906.value0.tail);
                  };
                  return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorErrorT(Control_Monad_Eff.monadEff))(new SandScript_Types.NotFunction("Failed `lambda` parse", Prelude.show(SandScript_Types.showLispVal)(new SandScript_Types.List(_732.value0))));
              };
              if (Prelude.otherwise) {
                  var _920 = Data_Array.uncons(_732.value0);
                  if (_920 instanceof Data_Maybe.Just) {
                      return Prelude.bind(Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))($$eval(env)(_920.value0.head))(function (_120) {
                          return Prelude.bind(Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))($$eval(env))(_920.value0.tail))(function (_119) {
                              return fapply(_120)(_119);
                          });
                      });
                  };
                  return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorErrorT(Control_Monad_Eff.monadEff))(new SandScript_Types.NotFunction("Did not recognize function", Prelude.show(SandScript_Types.showLispVal)(new SandScript_Types.List(_732.value0))));
              };
          };
          return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadErrorErrorT(Control_Monad_Eff.monadEff))(new SandScript_Types.BadSpecialForm("Unrecognized special form", _732));
      };
  };
  var closePort = function (_736) {
      if (_736.length === 1 && _736[0] instanceof SandScript_Types.Port) {
          return SandScript_Util[">>"](Control_Monad_Error_Trans.monadErrorT(Control_Monad_Eff.monadEff))(Control_Monad_Eff_Class.liftEff(Control_Monad_Error_Trans.monadEffError(Control_Monad_Eff.monadEff)(Control_Monad_Eff_Class.monadEffEff))(Node_FS_Sync.fdClose((_736[0]).value0)))(Prelude["return"](Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))(new SandScript_Types.Bool(true)));
      };
      return Prelude["return"](Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))(new SandScript_Types.Bool(false));
  };
  var applyProc = function (_734) {
      if (_734.length === 2 && _734[1] instanceof SandScript_Types.List) {
          return fapply(_734[0])((_734[1]).value0);
      };
      if (Prelude[">"](Prelude.ordInt)(Data_Array.length(_734))(0)) {
          return fapply(Data_Array_Unsafe.head(_734))(Data_Array_Unsafe.tail(_734));
      };
      throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/src/SandScript/Eval.purs line 106, column 1 - line 107, column 1: " + [ _734.constructor.name ]);
  };
  var effPrimitives = [ SandScript_Util["&"]("apply")(applyProc), SandScript_Util["&"]("open-input-file")(makePort(Node_FS_Sync.R.value)), SandScript_Util["&"]("open-output-file")(makePort(Node_FS_Sync.W.value)), SandScript_Util["&"]("close-input-port")(closePort), SandScript_Util["&"]("read-contents")(readContents), SandScript_Util["&"]("read-all")(readAll), SandScript_Util["&"]("close-output-port")(closePort) ];
  var primitiveBindings = (function () {
      var makeFunc$prime = function (constructor) {
          return function (_739) {
              return new Data_Tuple.Tuple(_739.value0, constructor(_739.value1));
          };
      };
      return Prelude[">>="](Control_Monad_Eff.bindEff)(SandScript_Variables.nullEnv)(Prelude.flip(SandScript_Variables.bindVars)(Prelude["++"](Prelude.semigroupArray)(Prelude.map(Prelude.functorArray)(makeFunc$prime(SandScript_Types.PrimitiveFunc.create))(SandScript_Eval_Primitives.primitives))(Prelude.map(Prelude.functorArray)(makeFunc$prime(SandScript_Types.EffFunc.create))(effPrimitives))));
  })();
  exports["primitiveBindings"] = primitiveBindings;
  exports["readAll"] = readAll;
  exports["load"] = load;
  exports["readContents"] = readContents;
  exports["closePort"] = closePort;
  exports["makePort"] = makePort;
  exports["applyProc"] = applyProc;
  exports["effPrimitives"] = effPrimitives;
  exports["evalIf"] = evalIf;
  exports["makeVarArgs"] = makeVarArgs;
  exports["makeNormalFunc"] = makeNormalFunc;
  exports["makeFunc"] = makeFunc;
  exports["fapply"] = fapply;
  exports["eval"] = $$eval;;
 
})(PS["SandScript.Eval"] = PS["SandScript.Eval"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Node.ReadLine

  exports.setLineHandler = function(callback) {
      return function(readline) {
          return function() {
              readline.removeAllListeners('line');
              readline.on('line', function(line) {
                  callback(line)();
              });
              return readline;
          };
      };
  };

  exports.prompt = function(readline) {
      return function() {
          readline.prompt();
          return readline;
      };
  };

  exports.setPrompt = function(prompt) {
      return function(length) {
          return function(readline) {
              return function() {
                  readline.setPrompt(prompt, length);
                  return readline;
              };
          };
      };
  };

  exports.createInterface = function(completer) {
      return function() {
          var readline = require('readline');
          return readline.createInterface({
              input: process.stdin,
              output: process.stdout,
              completer: function(line) {
                  var res = completer(line)();
                  return [res.completions, res.suffix];
              }
          });
      };
  };
})(PS["Node.ReadLine"] = PS["Node.ReadLine"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Node.ReadLine"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];     
  var noCompletion = function (s) {
      return Prelude["return"](Control_Monad_Eff.applicativeEff)({
          completions: [  ], 
          matched: s
      });
  };
  exports["noCompletion"] = noCompletion;
  exports["createInterface"] = $foreign.createInterface;
  exports["setPrompt"] = $foreign.setPrompt;
  exports["prompt"] = $foreign.prompt;
  exports["setLineHandler"] = $foreign.setLineHandler;;
 
})(PS["Node.ReadLine"] = PS["Node.ReadLine"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Data_Foreign_EasyFFI = PS["Data.Foreign.EasyFFI"];
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];                                                                             
  var usage = Data_Foreign_EasyFFI.unsafeForeignFunction([ "msg", "y" ])("y.usage(msg)");
  var string = Data_Foreign_EasyFFI.unsafeForeignFunction([ "key", "y" ])("y.string(key)");                                  
  var semigroupYargsSetup = new Prelude.Semigroup(Data_Foreign_EasyFFI.unsafeForeignFunction([ "s1", "s2", "y" ])("s2(s1(y))"));
  var requiresArg = Data_Foreign_EasyFFI.unsafeForeignFunction([ "key", "y" ])("y.requiresArg(key)");
  var monoidYargsSetup = new Data_Monoid.Monoid(function () {
      return semigroupYargsSetup;
  }, Data_Foreign_EasyFFI.unsafeForeignFunction([ "y" ])("y"));                                 
  var example = Data_Foreign_EasyFFI.unsafeForeignFunction([ "cmd", "desc", "y" ])("y.example(cmd, desc)");
  var describe = Data_Foreign_EasyFFI.unsafeForeignFunction([ "key", "desc", "y" ])("y.describe(key, desc)");
  var demand = Data_Foreign_EasyFFI.unsafeForeignFunction([ "key", "msg", "y" ])("y.demand(key, msg)");
  var alias = Data_Foreign_EasyFFI.unsafeForeignFunction([ "key", "alias", "y" ])("y.alias(key, alias)");
  exports["string"] = string;
  exports["describe"] = describe;
  exports["requiresArg"] = requiresArg;
  exports["demand"] = demand;
  exports["alias"] = alias;
  exports["example"] = example;
  exports["usage"] = usage;
  exports["semigroupYargsSetup"] = semigroupYargsSetup;
  exports["monoidYargsSetup"] = monoidYargsSetup;;
 
})(PS["Node.Yargs.Setup"] = PS["Node.Yargs.Setup"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Node.Yargs

  exports.yargs = function() {
      return require('yargs');
  };
})(PS["Node.Yargs"] = PS["Node.Yargs"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var $foreign = PS["Node.Yargs"];
  var Data_Foreign_EasyFFI = PS["Data.Foreign.EasyFFI"];
  var Prelude = PS["Prelude"];
  var Data_Foreign = PS["Data.Foreign"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Node_Yargs_Setup = PS["Node.Yargs.Setup"];     
  var setupWith = Data_Foreign_EasyFFI.unsafeForeignFunction([ "setup", "y", "" ])("setup(y)");
  var argv = Data_Foreign_EasyFFI.unsafeForeignFunction([ "y", "" ])("y.argv");
  var runYargs = function (setup) {
      return Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)($foreign.yargs)(setupWith(setup)))(argv);
  };
  exports["setupWith"] = setupWith;
  exports["argv"] = argv;
  exports["runYargs"] = runYargs;;
 
})(PS["Node.Yargs"] = PS["Node.Yargs"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Node_Yargs = PS["Node.Yargs"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Node_Yargs_Setup = PS["Node.Yargs.Setup"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Arg = function (arg) {
      this.arg = arg;
  };
  var unY = function (_672) {
      return _672;
  };
  var runY = function (setup) {
      return function (_673) {
          return function __do() {
              var _63 = Node_Yargs.runYargs(Prelude["<>"](Node_Yargs_Setup.semigroupYargsSetup)(setup)(_673.setup))();
              return (function () {
                  var _820 = _673.read(_63);
                  if (_820 instanceof Data_Either.Left) {
                      return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error(Prelude.show(Data_Foreign.showForeignError)(_820.value0)));
                  };
                  if (_820 instanceof Data_Either.Right) {
                      return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(_820.value0);
                  };
                  throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-yargs/src/Node/Yargs/Applicative.purs line 46, column 1 - line 49, column 1: " + [ _820.constructor.name ]);
              })()();
          };
      };
  };
  var readOneOrMany = function (__dict_IsForeign_0) {
      return function (key) {
          return function (value) {
              return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(Prelude.pure(Prelude.applicativeArray))(Data_Foreign_Class.readProp(__dict_IsForeign_0)(Data_Foreign_Index.indexString)(key)(value)))(Data_Foreign_Class.readProp(Data_Foreign_Class.arrayIsForeign(__dict_IsForeign_0))(Data_Foreign_Index.indexString)(key)(value));
          };
      };
  };
  var functorY = new Prelude.Functor(function (f) {
      return function (_674) {
          return {
              setup: _674.setup, 
              read: function (value) {
                  return Prelude["<$>"](Data_Either.functorEither)(f)(_674.read(value));
              }
          };
      };
  });
  var argStrings = new Arg(function (key) {
      return {
          setup: Node_Yargs_Setup.string(key), 
          read: readOneOrMany(Data_Foreign_Class.stringIsForeign)(key)
      };
  });
  var arg = function (dict) {
      return dict.arg;
  };
  var yarg = function (__dict_Arg_1) {
      return function (key) {
          return function (aliases) {
              return function (desc) {
                  return function (required) {
                      return function (needArg) {
                          var y = unY(arg(__dict_Arg_1)(key));
                          return {
                              setup: Prelude["<>"](Node_Yargs_Setup.semigroupYargsSetup)(y.setup)(Prelude["<>"](Node_Yargs_Setup.semigroupYargsSetup)(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Node_Yargs_Setup.monoidYargsSetup)(function (a) {
                                  return Node_Yargs_Setup.alias(key)(a);
                              })(aliases))(Prelude["<>"](Node_Yargs_Setup.semigroupYargsSetup)(Data_Foldable.foldMap(Data_Either.foldableEither)(Node_Yargs_Setup.monoidYargsSetup)(function (m) {
                                  return Node_Yargs_Setup.demand(key)(m);
                              })(required))(Prelude["<>"](Node_Yargs_Setup.semigroupYargsSetup)(Data_Foldable.foldMap(Data_Foldable.foldableMaybe)(Node_Yargs_Setup.monoidYargsSetup)(function (s) {
                                  return Node_Yargs_Setup.describe(key)(s);
                              })(desc))((function () {
                                  if (needArg) {
                                      return Node_Yargs_Setup.requiresArg(key);
                                  };
                                  if (!needArg) {
                                      return Data_Monoid.mempty(Node_Yargs_Setup.monoidYargsSetup);
                                  };
                                  throw new Error("Failed pattern match at /home/thimoteus/programming/sandscript/bower_components/purescript-yargs/src/Node/Yargs/Applicative.purs line 92, column 1 - line 93, column 1: " + [ needArg.constructor.name ]);
                              })())))), 
                              read: (function () {
                                  if (required instanceof Data_Either.Left) {
                                      return function (value) {
                                          return Control_Alt["<|>"](Data_Either.altEither)(y.read(value))(Prelude.pure(Data_Either.applicativeEither)(required.value0));
                                      };
                                  };
                                  return y.read;
                              })()
                          };
                      };
                  };
              };
          };
      };
  };
  exports["Arg"] = Arg;
  exports["yarg"] = yarg;
  exports["arg"] = arg;
  exports["runY"] = runY;
  exports["functorY"] = functorY;
  exports["argStrings"] = argStrings;;
 
})(PS["Node.Yargs.Applicative"] = PS["Node.Yargs.Applicative"] || {});
(function(exports) {
  // Generated by psc version 0.7.0.0
  "use strict";
  var Prelude = PS["Prelude"];
  var SandScript_Errors = PS["SandScript.Errors"];
  var SandScript_Parser = PS["SandScript.Parser"];
  var SandScript_Eval = PS["SandScript.Eval"];
  var SandScript_Variables = PS["SandScript.Variables"];
  var SandScript_Util = PS["SandScript.Util"];
  var Data_Array = PS["Data.Array"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Node_ReadLine = PS["Node.ReadLine"];
  var Node_Yargs_Setup = PS["Node.Yargs.Setup"];
  var Node_Yargs_Applicative = PS["Node.Yargs.Applicative"];
  var Data_Array_Unsafe = PS["Data.Array.Unsafe"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var SandScript_Types = PS["SandScript.Types"];
  var Node_Yargs = PS["Node.Yargs"];
  var Control_Monad_Error_Trans = PS["Control.Monad.Error.Trans"];     
  var runOne = function (args) {
      return function __do() {
          var _0 = Prelude[">>="](Control_Monad_Eff.bindEff)(SandScript_Eval.primitiveBindings)(Prelude.flip(SandScript_Variables.bindVars)([ SandScript_Util["&"]("args")(SandScript_Types.List.create(Prelude.map(Prelude.functorArray)((SandScript_Types["String"]).create)(Data_Array.drop(1)(args)))) ]))();
          return Prelude[">>="](Control_Monad_Eff.bindEff)(SandScript_Errors.runEffThrows(Prelude.map(Control_Monad_Error_Trans.functorErrorT(Control_Monad_Eff.functorEff))(Prelude.show(SandScript_Types.showLispVal))(SandScript_Eval["eval"](_0)(new SandScript_Types.List([ new SandScript_Types.Atom("load"), new SandScript_Types["String"](args[0]) ])))))(Control_Monad_Eff_Console.error)();
      };
  };
  var evalString = function (env) {
      return function (expr) {
          return SandScript_Errors.runEffThrows(Prelude.liftA1(Control_Monad_Error_Trans.applicativeErrorT(Control_Monad_Eff.applicativeEff))(Prelude.show(SandScript_Types.showLispVal))(Prelude[">>="](Control_Monad_Error_Trans.bindErrorT(Control_Monad_Eff.monadEff))(SandScript_Errors.liftThrows(SandScript_Parser.readExpr(expr)))(SandScript_Eval["eval"](env))));
      };
  };
  var runRepl = function __do() {
      var _3 = Node_ReadLine.createInterface(Node_ReadLine.noCompletion)();
      return (function () {
          var lineHandler = function (env) {
              return function (args) {
                  return function __do() {
                      var _1 = evalString(env)(args)();
                      Control_Monad_Eff_Console.log(_1)();
                      return Node_ReadLine.prompt(_3)();
                  };
              };
          };
          return function __do() {
              Node_ReadLine.setPrompt("> ")(2)(_3)();
              Node_ReadLine.prompt(_3)();
              var _2 = SandScript_Eval.primitiveBindings();
              Node_ReadLine.setLineHandler(lineHandler(_2))(_3)();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit)();
          };
      })()();
  };
  var app = function (_4) {
      if (_4.length === 1 && _4[0] === "repl") {
          return runRepl;
      };
      return runOne(_4);
  };
  var main = (function () {
      var setup = Prelude["<>"](Node_Yargs_Setup.semigroupYargsSetup)(Node_Yargs_Setup.usage("$0 -l File"))(Node_Yargs_Setup.example("$0 -l App.snd")("Run App.snd"));
      return Node_Yargs_Applicative.runY(setup)(Prelude["<$>"](Node_Yargs_Applicative.functorY)(app)(Node_Yargs_Applicative.yarg(Node_Yargs_Applicative.argStrings)("l")([ "load" ])(new Data_Maybe.Just("A filename"))(new Data_Either.Left([ "repl" ]))(false)));
  })();
  exports["main"] = main;
  exports["app"] = app;
  exports["runRepl"] = runRepl;
  exports["runOne"] = runOne;
  exports["evalString"] = evalString;;
 
})(PS["Main"] = PS["Main"] || {});

PS["Main"].main();
