(load "lang/Prelude.sand")

;If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
;Find the sum of all the multiples of 3 or 5 below 1000.

(def (is-multiple n)
  (cond
    ((zero? (mod n 3)) true)
    ((zero? (mod n 5)) true)
    (else false)))

(def (f xs)
  (reduce + 0 (filter is-multiple xs)))

; right now our language will run out of stack if we call it on the full range
; we can get just a couple more ints in our range if we use a nested if instead of cond
(def x0 (range 3 499))
(def x1 (range 500 999))

(sum (f x0) (f x1))
